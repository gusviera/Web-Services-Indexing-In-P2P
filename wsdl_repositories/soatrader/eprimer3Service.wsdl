<wsdl:definitions xmlns:soat="http://ws.soatrader.com/"
                  xmlns:tns="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:apachesoap="http://xml.apache.org/xml-soap"
                  xmlns:impl="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3"
                  xmlns:intf="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3"
                  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3">
   <wsdl:message name="SOATraderLicense">
      <wsdl:part element="soat:SOATraderLicense" name="SOATraderLicense"/>
   </wsdl:message>
   <wsdl:message name="SOATraderUsageStatistics">
      <wsdl:part element="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
   </wsdl:message>
  <wsdl:types>
      <schema xmlns="http://www.w3.org/2001/XMLSchema"
              targetNamespace="http://ws.soatrader.com/"
              elementFormDefault="qualified">
         <element type="string" name="SOATraderLicense"/>
         <element type="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
         <complexType name="SOATraderUsageStatistics">
            <sequence>
               <element type="decimal" name="HitsMade"/>
               <element type="decimal" name="HitsLeft"/>
            </sequence>
         </complexType>
      </schema>
      <schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
              targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3">
         <xsd:annotation>
            <xsd:documentation>Picks PCR primers and hybridization oligos</xsd:documentation>
         </xsd:annotation>
         <element name="runAndWaitFor">
            <complexType>
               <sequence>
                  <element name="eprimer3" type="impl:Teprimer3"/>
               </sequence>
            </complexType>
         </element>
         <simpleType name="Teprimer3SequenceSformat">
            <restriction base="xsd:string">
               <enumeration value="gcg"/>
               <enumeration value="gcg8"/>
               <enumeration value="embl"/>
               <enumeration value="swiss"/>
               <enumeration value="fasta"/>
               <enumeration value="ncbi"/>
               <enumeration value="genbank"/>
               <enumeration value="nbrf"/>
               <enumeration value="pir"/>
               <enumeration value="codata"/>
               <enumeration value="strider"/>
               <enumeration value="clustal"/>
               <enumeration value="phylip"/>
               <enumeration value="acedb"/>
               <enumeration value="msf"/>
               <enumeration value="jackknifer"/>
               <enumeration value="jackknifernon"/>
               <enumeration value="nexus"/>
               <enumeration value="nexusnon"/>
               <enumeration value="treecon"/>
               <enumeration value="mega"/>
               <enumeration value="meganon"/>
               <enumeration value="ig"/>
               <enumeration value="staden"/>
               <enumeration value="text"/>
               <enumeration value="raw"/>
            </restriction>
         </simpleType>
         <complexType name="Teprimer3Sequence">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="sequence_direct_data" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sequence_usa" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sformat" type="impl:Teprimer3SequenceSformat"/>
               <element maxOccurs="1" minOccurs="0" name="sbegin" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="send" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="sprotein" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="snucleotide" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="sreverse" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="slower" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="supper" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <simpleType name="Teprimer3Task">
            <restriction base="xsd:string">
               <enumeration value="1"/>
               <enumeration value="2"/>
               <enumeration value="3"/>
               <enumeration value="4"/>
            </restriction>
         </simpleType>
         <complexType name="Teprimer3Oligomishyblibraryfile">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile_direct_data"
                        type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile_url" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="Teprimer3Mispriminglibraryfile">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile_direct_data"
                        type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile_url" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="Teprimer3">
            <sequence>
               <element name="sequence" type="impl:Teprimer3Sequence">
                  <xsd:annotation>
                     <xsd:documentation>qualifiers for parameter: sequence</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="task" type="impl:Teprimer3Task">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Task</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Tell EPrimer3 what task to perform. Legal values are 0:
             'Pick PCR primers', 1: 'Pick PCR primers and hybridization
             probe', 2: 'Pick forward primer only', 3: 'Pick reverse primer
             only', 4: 'Pick hybridization probe only'.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile"
                        type="impl:Teprimer3Oligomishyblibraryfile">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo mishybridizing library</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Similar to MISPRIMING-LIBRARY, except that the event we
             seek to avoid is hybridization of the internal oligo to
             sequences in this library rather than priming from them. 
             The file must be in (a slightly restricted) FASTA format (W. B.
             Pearson and D.J. Lipman, PNAS 85:8 pp 2444-2448 [1988]); we
             briefly discuss the organization of this file below. If this
             parameter is specified then EPrimer3 locally aligns each
             candidate oligo against each library sequence and rejects those
             primers for which the local alignment score times a specified
             weight (see below) exceeds INTERNAL-OLIGO-MAX-MISHYB. (The
             maximum value of the weight is arbitrarily set to 12.0.) 
             Each sequence entry in the FASTA-format file must begin with an
             'id line' that starts with '&gt;'. The contents of the id line is
             'slightly restricted' in that EPrimer3 parses everything after
             any optional asterisk ('*') as a floating point number to use as
             the weight mentioned above. If the id line contains no asterisk
             then the weight defaults to 1.0. The alignment scoring system
             used is the same as for calculating complementarity among oligos
             (e.g. SELF-ANY). The remainder of an entry contains the
             sequence as lines following the id line up until a line starting
             with '&gt;' or the end of the file. Whitespace and newlines are
             ignored. Characters 'A', 'T', 'G', 'C', 'a', 't', 'g', 'c' are
             retained and any other character is converted to 'N' (with the
             consequence that any IUB / IUPAC codes for ambiguous bases are
             converted to 'N'). There are no restrictions on line length. 
             An empty value for this parameter indicates that no library
             should be used.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile"
                        type="impl:Teprimer3Mispriminglibraryfile">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Mispriming library</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The name of a file containing a nucleotide sequence
             library of sequences to avoid amplifying (for example repetitive
             sequences, or possibly the sequences of genes in a gene family
             that should not be amplified.) The file must be in (a slightly
             restricted) FASTA format (W. B. Pearson and D.J. Lipman, PNAS
             85:8 pp 2444-2448 [1988]); we briefly discuss the organization
             of this file below. If this parameter is specified then EPrimer3
             locally aligns each candidate primer against each library
             sequence and rejects those primers for which the local alignment
             score times a specified weight (see below) exceeds
             MAX-MISPRIMING. (The maximum value of the weight is arbitrarily
             set to 100.0.) 
             Each sequence entry in the FASTA-format file must begin with an
             'id line' that starts with '&gt;'. The contents of the id line is
             'slightly restricted' in that EPrimer3 parses everything after
             any optional asterisk ('*') as a floating point number to use as
             the weight mentioned above. If the id line contains no asterisk
             then the weight defaults to 1.0. The alignment scoring system
             used is the same as for calculating complementarity among oligos
             (e.g. SELF-ANY). The remainder of an entry contains the
             sequence as lines following the id line up until a line starting
             with '&gt;' or the end of the file. Whitespace and newlines are
             ignored. Characters 'A', 'T', 'G', 'C', 'a', 't', 'g', 'c' are
             retained and any other character is converted to 'N' (with the
             consequence that any IUB / IUPAC codes for ambiguous bases are
             converted to 'N'). There are no restrictions on line length. 
             An empty value for this parameter indicates that no repeat
             library should be used.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="numreturn" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Number of results to return</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum number of primer pairs to return. Primer
             pairs returned are sorted by their 'quality', in other words by
             the value of the objective function (where a lower number
             indicates a better primer pair). Caution: setting this parameter
             to a large value will increase running time.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="includedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Included region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>A sub-region of the given sequence in which to pick
             primers. For example, often the first dozen or so bases of a
             sequence are vector, and should be excluded from consideration.
             The value for this parameter has the form 
             (start),(end) 
             where (start) is the index of the first base to consider, and
             (end) is the last in the primer-picking region.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="target" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Target region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If one or more Targets is specified then a legal primer
             pair must flank at least one of them. A Target might be a simple
             sequence repeat site (for example a CA repeat) or a
             single-base-pair polymorphism. The value should be a
             space-separated list of 
             (start),(end) 
             pairs where (start) is the index of the first base of a Target,
             and (end) is the last 
             E.g. 50,51 requires primers to surround the 2 bases at positions
             50 and 51.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="excludedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Excluded region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Primer oligos may not overlap any region specified in
             this tag. The associated value must be a space-separated list of
             
             (start),(end) 
             pairs where (start) is the index of the first base of the
             excluded region, and and (end) is the last. This tag is useful
             for tasks such as excluding regions of low sequence quality or
             for excluding regions containing repetitive elements such as
             ALUs or LINEs. 
             E.g. 401,407 68,70 forbids selection of primers in the 7 bases
             starting at 401 and the 3 bases at 68.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="forwardinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Forward input primer sequence to check</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of a forward primer to check and around
             which to design reverse primers and optional internal oligos.
             Must be a substring of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="reverseinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Reverse input primer sequence to check</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of a reverse primer to check and around
             which to design forward primers and optional internal oligos.
             Must be a substring of the reverse strand of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="gcclamp" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>GC clamp</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Require the specified number of consecutive Gs and Cs at
             the 3' end of both the forward and reverse primer. (This
             parameter has no effect on the internal oligo if one is
             requested.)</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="osize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum length (in bases) of a primer oligo. EPrimer3
             will attempt to pick primers close to this length.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="minsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable length of a primer. Must be greater
             than 0 and less than or equal to MAX-SIZE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable length (in bases) of a primer.
             Currently this parameter cannot be larger than 35. This limit is
             governed by the maximum oligo size for which EPrimer3's
             melting-temperature is valid.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="otm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum melting temperature(Celsius) for a primer oligo.
             EPrimer3 will try to pick primers with melting temperatures are
             close to this temperature. The oligo melting temperature formula
             in EPrimer3 is that given in Rychlik, Spencer and Rhoads,
             Nucleic Acids Research, vol 18, num 12, pp 6409-6412 and
             Breslauer, Frank, Bloeker and Marky, Proc. Natl. Acad. Sci. USA,
             vol 83, pp 3746-3750. Please refer to the former paper for
             background discussion.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable melting temperature(Celsius) for a
             primer oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable melting temperature(Celsius) for a
             primer oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxdifftm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum difference in Tm of primers</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable (unsigned) difference between the
             melting temperatures of the forward and reverse primers.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="ogcpercent" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Primer optimum GC percent.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mingc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum allowable percentage of Gs and Cs in any primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxgc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum allowable percentage of Gs and Cs in any primer
             generated by Primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="saltconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Salt concentration (mM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The millimolar concentration of salt (usually KCl) in the
             PCR. EPrimer3 uses this argument to calculate oligo melting
             temperatures.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="dnaconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>DNA concentration (nM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The nanomolar concentration of annealing oligos in the
             PCR. EPrimer3 uses this argument to calculate oligo melting
             temperatures. The default (50nM) works well with the standard
             protocol used at the Whitehead/MIT Center for Genome
             Research--0.5 microliters of 20 micromolar concentration for
             each primer oligo in a 20 microliter reaction with 10 nanograms
             template, 0.025 units/microliter Taq polymerase in 0.1 mM each
             dNTP, 1.5mM MgCl2, 50mM KCl, 10mM Tris-HCL (pH 9.3) using 35
             cycles with an annealing temperature of 56 degrees Celsius. This
             parameter corresponds to 'c' in Rychlik, Spencer and Rhoads'
             equation (ii) (Nucleic Acids Research, vol 18, num 12) where a
             suitable value (for a lower initial concentration of template)
             is 'empirically determined'. The value of this parameter is less
             than the actual concentration of oligos in the reaction because
             it is the concentration of annealing oligos, which in turn
             depends on the amount of template (including PCR product) in a
             given cycle. This concentration increases a great deal during a
             PCR; fortunately PCR seems quite robust for a variety of oligo
             melting temperatures. 
             See ADVICE FOR PICKING PRIMERS.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxpolyx" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum polynucleotide repeat</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable length of a mononucleotide repeat
             in a primer, for example AAAAAA.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productosize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The optimum size for the PCR product. 0 indicates that
             there is no optimum product size.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productsizerange" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product size range</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The associated values specify the lengths of the product
             that the user wants the primers to create, and is a space
             separated list of elements of the form 
             (x)-(y) 
             where an (x)-(y) pair is a legal range of lengths for the
             product. For example, if one wants PCR products to be between
             100 to 150 bases (inclusive) then one would set this parameter
             to 100-150. If one desires PCR products in either the range from
             100 to 150 bases or in the range from 200 to 250 bases then one
             would set this parameter to 100-150 200-250. 
             EPrimer3 favors ranges to the left side of the parameter string.
             EPrimer3 will return legal primers pairs in the first range
             regardless the value of the objective function for these pairs.
             Only if there are an insufficient number of primers in the first
             range will EPrimer3 return primers in a subsequent range.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productotm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The optimum melting temperature for the PCR product. 0
             indicates that there is no optimum temperature.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productmintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The minimum allowed melting temperature of the amplicon.
             Please see the documentation on the maximum melting temperature
             of the product for details.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productmaxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed melting temperature of the amplicon.
             Product Tm is calculated using the formula from Bolton and
             McCarthy, PNAS 84:1390 (1962) as presented in Sambrook, Fritsch
             and Maniatis, Molecular Cloning, p 11.46 (1989, CSHL Press). 
             Tm = 81.5 + 16.6(log10([Na+])) + .41*(%GC) - 600/length 
             Where [Na+} is the molar sodium concentration, (%GC) is the
             percent of Gs and Cs in the sequence, and length is the length
             of the sequence. 
             A similar formula is used by the prime primer selection program
             in GCG http://www.gcg.com), which instead uses 675.0/length in
             the last term (after F. Baldino, Jr, M.-F. Chesselet, and M.E.
             Lewis, Methods in Enzymology 168:766 (1989) eqn (1) on page 766
             without the mismatch and formamide terms). The formulas here and
             in Baldino et al. assume Na+ rather than K+. According to J.G.
             Wetmur, Critical Reviews in BioChem. and Mol. Bio. 26:227 (1991)
             50 mM K+ should be equivalent in these formulae to .2 M Na+.
             EPrimer3 uses the same salt concentration value for calculating
             both the primer melting temperature and the oligo melting
             temperature. If you are planning to use the PCR product for
             hybridization later this behavior will not give you the Tm under
             hybridization conditions.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoexcludedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo excluded region</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Middle oligos may not overlap any region specified by
             this tag. The associated value must be a space-separated list of
             
             (start),(end) 
             pairs, where (start) is the index of the first base of an
             excluded region, and (end) is the last. Often one would make
             Target regions excluded regions for internal oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo input sequence (if any)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of an internal oligo to check and around
             which to design forward and reverse primers. Must be a substring
             of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoosize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum length (in bases) of an internal oligo. EPrimer3
             will attempt to pick primers close to this length.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligominsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable length of an internal oligo. Must be
             greater than 0 and less than or equal to
             INTERNAL-OLIGO-MAX-SIZE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable length (in bases) of an internal
             oligo. Currently this parameter cannot be larger than 35. This
             limit is governed by maximum oligo size for which EPrimer3's
             melting-temperature is valid.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligootm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum melting temperature (Celsius) for an internal
             oligo. EPrimer3 will try to pick oligos with melting
             temperatures that are close to this temperature. The oligo
             melting temperature formula in EPrimer3 is that given in
             Rychlik, Spencer and Rhoads, Nucleic Acids Research, vol 18, num
             12, pp 6409-6412 and Breslauer, Frank, Bloeker and Marky, Proc.
             Natl. Acad. Sci. USA, vol 83, pp 3746-3750. Please refer to the
             former paper for background discussion.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable melting temperature(Celsius) for an
             internal oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable melting temperature (Celsius) for an
             internal oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoogcpercent" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Internal oligo optimum GC percent.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomingc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum GC</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum allowable percentage of Gs and Cs in an internal
             oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxgc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum GC</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum allowable percentage of Gs and Cs in any internal
             oligo generated by Primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligosaltconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo salt concentration (mM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The millimolar concentration of salt (usually KCl) in the
             hybridization. EPrimer3 uses this argument to calculate
             internal oligo melting temperatures.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligodnaconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo DNA concentration (nM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The nanomolar concentration of annealing internal oligo
             in the hybridization.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoselfany" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum self
                    complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable local alignment score when testing
             an internal oligo for (local) self-complementarity. Local
             self-complementarity is taken to predict the tendency of oligos
             to anneal to themselves The scoring system gives 1.00 for
             complementary bases, -0.25 for a match of any base (or N) with
             an N, -1.00 for a mismatch, and -2.00 for a gap. Only
             single-base-pair gaps are allowed. For example, the alignment 
             5' ATCGNA 3' 
             || | | 
             3' TA-CGT 5' 
             is allowed (and yields a score of 1.75), but the alignment 
             5' ATCCGNA 3' 
             || | | 
             3' TA--CGT 5' 
             is not considered. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable local alignment between
             two oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoselfend" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum 3' self
                    complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable 3'-anchored global alignment score
             when testing a single oligo for self-complementarity. 
             The scoring system is as for the Maximum Complementarity
             argument. In the examples above the scores are 7.00 and 6.00
             respectively. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable 3'-anchored global
             alignment between two oligos. In order to estimate 3'-anchored
             global alignments for candidate oligos, Primer assumes that the
             sequence from which to choose oligos is presented 5' to 3'. 
             INTERNAL-OLIGO-SELF-END is meaningless when applied to internal
             oligos used for hybridization-based detection, since
             primer-dimer will not occur. We recommend that
             INTERNAL-OLIGO-SELF-END be set at least as high as
             INTERNAL-OLIGO-SELF-ANY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxpolyx" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum polynucleotide
                    repeat</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable length of an internal oligo
             mononucleotide repeat, for example AAAAAA.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxmishyb" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum mishybridization</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Similar to MAX-MISPRIMING except that this parameter
             applies to the similarity of candidate internal oligos to the
             library specified in INTERNAL-OLIGO-MISHYB-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="explainflag" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Explain flag</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If this flag is true, produce LEFT-EXPLAIN,
             RIGHT-EXPLAIN, and INTERNAL-OLIGO-EXPLAIN output tags, which are
             intended to provide information on the number of oligos and
             primer pairs that EPrimer3 examined, and statistics on the
             number discarded for various reasons.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="fileflag" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Create results files for each sequence</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If the associated value is true, then EPrimer3 creates
             two output files for each input SEQUENCE. File (sequence-id).for
             lists all acceptable forward primers for (sequence-id), and
             (sequence-id).rev lists all acceptable reverse primers for
             (sequence-id), where (sequence-id) is the value of the
             SEQUENCE-ID tag (which must be supplied). In addition, if the
             input tag TASK is 1 or 4, EPrimer3 produces a file
             (sequence-id).int, which lists all acceptable internal oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="firstbaseindex" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>First base index</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>This parameter is the index of the first base in the
             input sequence. For input and output using 1-based indexing
             (such as that used in GenBank and to which many users are
             accustomed) set this parameter to 1. For input and output using
             0-based indexing set this parameter to 0. (This parameter also
             affects the indexes in the contents of the files produced when
             the primer file flag is set.)</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="pickanyway" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Pick anyway</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If true pick a primer pair even if LEFT-INPUT,
             RIGHT-INPUT, or INTERNAL-OLIGO-INPUT violates specific
             constraints.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxmispriming" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum mispriming</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed weighted similarity with any sequence
             in MISPRIMING-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="pairmaxmispriming" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer pair maximum mispriming</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed sum of weighted similarities of a
             primer pair (one similarity for each primer) with any single
             sequence in MISPRIMING-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="numnsaccepted" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum Ns accepted in a primer</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum number of unknown bases (N) allowable in any
             primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="selfany" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum self complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable local alignment score when testing
             a single primer for (local) self-complementarity and the maximum
             allowable local alignment score when testing for
             complementarity between forward and reverse primers. Local
             self-complementarity is taken to predict the tendency of primers
             to anneal to each other without necessarily causing
             self-priming in the PCR. The scoring system gives 1.00 for
             complementary bases, -0.25 for a match of any base (or N) with
             an N, -1.00 for a mismatch, and -2.00 for a gap. Only
             single-base-pair gaps are allowed. For example, the alignment 
             5' ATCGNA 3' 
             ...|| | | 
             3' TA-CGT 5' 
             is allowed (and yields a score of 1.75), but the alignment 
             5' ATCCGNA 3' 
             ...|| | | 
             3' TA--CGT 5' 
             is not considered. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable local alignment between
             two oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="selfend" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum 3' self complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable 3'-anchored global alignment score
             when testing a single primer for self-complementarity, and the
             maximum allowable 3'-anchored global alignment score when
             testing for complementarity between forward and reverse primers.
             The 3'-anchored global alignment score is taken to predict the
             likelihood of PCR-priming primer-dimers, for example 
             5' ATGCCCTAGCTTCCGGATG 3' 
             .............||| ||||| 
             ..........3' AAGTCCTACATTTAGCCTAGT 5' 
             or 
             5' AGGCTATGGGCCTCGCGA 3' 
             ...............|||||| 
             ............3' AGCGCTCCGGGTATCGGA 5' 
             The scoring system is as for the Maximum Complementarity
             argument. In the examples above the scores are 7.00 and 6.00
             respectively. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable 3'-anchored global
             alignment between two oligos. In order to estimate 3'-anchored
             global alignments for candidate primers and primer pairs, Primer
             assumes that the sequence from which to choose primers is
             presented 5' to 3'. It is nonsensical to provide a larger value
             for this parameter than for the Maximum (local) Complementarity
             parameter because the score of a local alignment will always be
             at least as great as the score of a global alignment.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxendstability" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum 3' end stability</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum stability for the five 3' bases of a forward
             or reverse primer. Bigger numbers mean more stable 3' ends. The
             value is the maximum delta G for duplex disruption for the five
             3' bases as calculated using the nearest neighbor parameters
             published in Breslauer, Frank, Bloeker and Marky, Proc. Natl.
             Acad. Sci. USA, vol 83, pp 3746-3750. EPrimer3 uses a completely
             permissive default value for backward compatibility (which we
             may change in the next release). Rychlik recommends a maximum
             value of 9 (Wojciech Rychlik, 'Selection of Primers for
             Polymerase Chain Reaction' in BA White, Ed., 'Methods in
             Molecular Biology, Vol. 15: PCR Protocols: Current Methods and
             Applications', 1993, pp 31-40, Humana Press, Totowa NJ).</xsd:documentation>
                  </xsd:annotation>
               </element>
            </sequence>
         </complexType>
         <element name="runAndWaitForResponse">
            <complexType>
               <sequence>
                  <element name="eprimer3Result" type="impl:Teprimer3Result"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="Teprimer3Result">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="outfile" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="TSoaplabException">
            <sequence/>
         </complexType>
         <element name="fault" type="impl:TSoaplabException"/>
         <element name="createAndRun">
            <complexType>
               <sequence>
                  <element name="eprimer3" type="impl:Teprimer3"/>
               </sequence>
            </complexType>
         </element>
         <element name="createAndRunResponse">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitFor">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitForResponse">
            <complexType/>
         </element>
         <element name="getStatus">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getStatusResponse">
            <complexType>
               <sequence>
                  <element name="status" type="impl:Tstatus"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="Tstatus">
            <sequence>
               <element name="inProgress" type="xsd:boolean"/>
               <element name="detailed" type="xsd:string"/>
               <element name="erroneous" type="xsd:boolean"/>
               <element name="description" type="xsd:string"/>
               <element name="completed" type="xsd:boolean"/>
               <element name="asString" type="xsd:string"/>
               <element name="successful" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getResults">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getResultsResponse">
            <complexType>
               <sequence>
                  <element name="eprimer3Result" type="impl:Teprimer3Result"/>
               </sequence>
            </complexType>
         </element>
      </schema>
      <schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
              targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/nucleic_primers.eprimer3">
         <xsd:annotation>
            <xsd:documentation>Picks PCR primers and hybridization oligos</xsd:documentation>
         </xsd:annotation>
         <element name="runAndWaitFor">
            <complexType>
               <sequence>
                  <element name="eprimer3" type="impl:Teprimer3"/>
               </sequence>
            </complexType>
         </element>
         <simpleType name="Teprimer3SequenceSformat">
            <restriction base="xsd:string">
               <enumeration value="gcg"/>
               <enumeration value="gcg8"/>
               <enumeration value="embl"/>
               <enumeration value="swiss"/>
               <enumeration value="fasta"/>
               <enumeration value="ncbi"/>
               <enumeration value="genbank"/>
               <enumeration value="nbrf"/>
               <enumeration value="pir"/>
               <enumeration value="codata"/>
               <enumeration value="strider"/>
               <enumeration value="clustal"/>
               <enumeration value="phylip"/>
               <enumeration value="acedb"/>
               <enumeration value="msf"/>
               <enumeration value="jackknifer"/>
               <enumeration value="jackknifernon"/>
               <enumeration value="nexus"/>
               <enumeration value="nexusnon"/>
               <enumeration value="treecon"/>
               <enumeration value="mega"/>
               <enumeration value="meganon"/>
               <enumeration value="ig"/>
               <enumeration value="staden"/>
               <enumeration value="text"/>
               <enumeration value="raw"/>
            </restriction>
         </simpleType>
         <complexType name="Teprimer3Sequence">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="sequence_direct_data" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sequence_usa" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sformat" type="impl:Teprimer3SequenceSformat"/>
               <element maxOccurs="1" minOccurs="0" name="sbegin" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="send" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="sprotein" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="snucleotide" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="sreverse" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="slower" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="supper" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <simpleType name="Teprimer3Task">
            <restriction base="xsd:string">
               <enumeration value="1"/>
               <enumeration value="2"/>
               <enumeration value="3"/>
               <enumeration value="4"/>
            </restriction>
         </simpleType>
         <complexType name="Teprimer3Oligomishyblibraryfile">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile_direct_data"
                        type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile_url" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="Teprimer3Mispriminglibraryfile">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile_direct_data"
                        type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile_url" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="Teprimer3">
            <sequence>
               <element name="sequence" type="impl:Teprimer3Sequence">
                  <xsd:annotation>
                     <xsd:documentation>qualifiers for parameter: sequence</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="task" type="impl:Teprimer3Task">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Task</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Tell EPrimer3 what task to perform. Legal values are 0:
             'Pick PCR primers', 1: 'Pick PCR primers and hybridization
             probe', 2: 'Pick forward primer only', 3: 'Pick reverse primer
             only', 4: 'Pick hybridization probe only'.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomishyblibraryfile"
                        type="impl:Teprimer3Oligomishyblibraryfile">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo mishybridizing library</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Similar to MISPRIMING-LIBRARY, except that the event we
             seek to avoid is hybridization of the internal oligo to
             sequences in this library rather than priming from them. 
             The file must be in (a slightly restricted) FASTA format (W. B.
             Pearson and D.J. Lipman, PNAS 85:8 pp 2444-2448 [1988]); we
             briefly discuss the organization of this file below. If this
             parameter is specified then EPrimer3 locally aligns each
             candidate oligo against each library sequence and rejects those
             primers for which the local alignment score times a specified
             weight (see below) exceeds INTERNAL-OLIGO-MAX-MISHYB. (The
             maximum value of the weight is arbitrarily set to 12.0.) 
             Each sequence entry in the FASTA-format file must begin with an
             'id line' that starts with '&gt;'. The contents of the id line is
             'slightly restricted' in that EPrimer3 parses everything after
             any optional asterisk ('*') as a floating point number to use as
             the weight mentioned above. If the id line contains no asterisk
             then the weight defaults to 1.0. The alignment scoring system
             used is the same as for calculating complementarity among oligos
             (e.g. SELF-ANY). The remainder of an entry contains the
             sequence as lines following the id line up until a line starting
             with '&gt;' or the end of the file. Whitespace and newlines are
             ignored. Characters 'A', 'T', 'G', 'C', 'a', 't', 'g', 'c' are
             retained and any other character is converted to 'N' (with the
             consequence that any IUB / IUPAC codes for ambiguous bases are
             converted to 'N'). There are no restrictions on line length. 
             An empty value for this parameter indicates that no library
             should be used.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mispriminglibraryfile"
                        type="impl:Teprimer3Mispriminglibraryfile">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Mispriming library</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The name of a file containing a nucleotide sequence
             library of sequences to avoid amplifying (for example repetitive
             sequences, or possibly the sequences of genes in a gene family
             that should not be amplified.) The file must be in (a slightly
             restricted) FASTA format (W. B. Pearson and D.J. Lipman, PNAS
             85:8 pp 2444-2448 [1988]); we briefly discuss the organization
             of this file below. If this parameter is specified then EPrimer3
             locally aligns each candidate primer against each library
             sequence and rejects those primers for which the local alignment
             score times a specified weight (see below) exceeds
             MAX-MISPRIMING. (The maximum value of the weight is arbitrarily
             set to 100.0.) 
             Each sequence entry in the FASTA-format file must begin with an
             'id line' that starts with '&gt;'. The contents of the id line is
             'slightly restricted' in that EPrimer3 parses everything after
             any optional asterisk ('*') as a floating point number to use as
             the weight mentioned above. If the id line contains no asterisk
             then the weight defaults to 1.0. The alignment scoring system
             used is the same as for calculating complementarity among oligos
             (e.g. SELF-ANY). The remainder of an entry contains the
             sequence as lines following the id line up until a line starting
             with '&gt;' or the end of the file. Whitespace and newlines are
             ignored. Characters 'A', 'T', 'G', 'C', 'a', 't', 'g', 'c' are
             retained and any other character is converted to 'N' (with the
             consequence that any IUB / IUPAC codes for ambiguous bases are
             converted to 'N'). There are no restrictions on line length. 
             An empty value for this parameter indicates that no repeat
             library should be used.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="numreturn" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Number of results to return</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum number of primer pairs to return. Primer
             pairs returned are sorted by their 'quality', in other words by
             the value of the objective function (where a lower number
             indicates a better primer pair). Caution: setting this parameter
             to a large value will increase running time.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="includedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Included region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>A sub-region of the given sequence in which to pick
             primers. For example, often the first dozen or so bases of a
             sequence are vector, and should be excluded from consideration.
             The value for this parameter has the form 
             (start),(end) 
             where (start) is the index of the first base to consider, and
             (end) is the last in the primer-picking region.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="target" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Target region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If one or more Targets is specified then a legal primer
             pair must flank at least one of them. A Target might be a simple
             sequence repeat site (for example a CA repeat) or a
             single-base-pair polymorphism. The value should be a
             space-separated list of 
             (start),(end) 
             pairs where (start) is the index of the first base of a Target,
             and (end) is the last 
             E.g. 50,51 requires primers to surround the 2 bases at positions
             50 and 51.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="excludedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Excluded region(s)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Primer oligos may not overlap any region specified in
             this tag. The associated value must be a space-separated list of
             
             (start),(end) 
             pairs where (start) is the index of the first base of the
             excluded region, and and (end) is the last. This tag is useful
             for tasks such as excluding regions of low sequence quality or
             for excluding regions containing repetitive elements such as
             ALUs or LINEs. 
             E.g. 401,407 68,70 forbids selection of primers in the 7 bases
             starting at 401 and the 3 bases at 68.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="forwardinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Forward input primer sequence to check</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of a forward primer to check and around
             which to design reverse primers and optional internal oligos.
             Must be a substring of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="reverseinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Reverse input primer sequence to check</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of a reverse primer to check and around
             which to design forward primers and optional internal oligos.
             Must be a substring of the reverse strand of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="gcclamp" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>GC clamp</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Require the specified number of consecutive Gs and Cs at
             the 3' end of both the forward and reverse primer. (This
             parameter has no effect on the internal oligo if one is
             requested.)</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="osize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum length (in bases) of a primer oligo. EPrimer3
             will attempt to pick primers close to this length.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="minsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable length of a primer. Must be greater
             than 0 and less than or equal to MAX-SIZE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable length (in bases) of a primer.
             Currently this parameter cannot be larger than 35. This limit is
             governed by the maximum oligo size for which EPrimer3's
             melting-temperature is valid.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="otm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum melting temperature(Celsius) for a primer oligo.
             EPrimer3 will try to pick primers with melting temperatures are
             close to this temperature. The oligo melting temperature formula
             in EPrimer3 is that given in Rychlik, Spencer and Rhoads,
             Nucleic Acids Research, vol 18, num 12, pp 6409-6412 and
             Breslauer, Frank, Bloeker and Marky, Proc. Natl. Acad. Sci. USA,
             vol 83, pp 3746-3750. Please refer to the former paper for
             background discussion.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable melting temperature(Celsius) for a
             primer oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable melting temperature(Celsius) for a
             primer oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxdifftm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum difference in Tm of primers</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable (unsigned) difference between the
             melting temperatures of the forward and reverse primers.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="ogcpercent" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer optimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Primer optimum GC percent.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="mingc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer minimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum allowable percentage of Gs and Cs in any primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxgc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum allowable percentage of Gs and Cs in any primer
             generated by Primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="saltconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Salt concentration (mM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The millimolar concentration of salt (usually KCl) in the
             PCR. EPrimer3 uses this argument to calculate oligo melting
             temperatures.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="dnaconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>DNA concentration (nM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The nanomolar concentration of annealing oligos in the
             PCR. EPrimer3 uses this argument to calculate oligo melting
             temperatures. The default (50nM) works well with the standard
             protocol used at the Whitehead/MIT Center for Genome
             Research--0.5 microliters of 20 micromolar concentration for
             each primer oligo in a 20 microliter reaction with 10 nanograms
             template, 0.025 units/microliter Taq polymerase in 0.1 mM each
             dNTP, 1.5mM MgCl2, 50mM KCl, 10mM Tris-HCL (pH 9.3) using 35
             cycles with an annealing temperature of 56 degrees Celsius. This
             parameter corresponds to 'c' in Rychlik, Spencer and Rhoads'
             equation (ii) (Nucleic Acids Research, vol 18, num 12) where a
             suitable value (for a lower initial concentration of template)
             is 'empirically determined'. The value of this parameter is less
             than the actual concentration of oligos in the reaction because
             it is the concentration of annealing oligos, which in turn
             depends on the amount of template (including PCR product) in a
             given cycle. This concentration increases a great deal during a
             PCR; fortunately PCR seems quite robust for a variety of oligo
             melting temperatures. 
             See ADVICE FOR PICKING PRIMERS.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxpolyx" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum polynucleotide repeat</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable length of a mononucleotide repeat
             in a primer, for example AAAAAA.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productosize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The optimum size for the PCR product. 0 indicates that
             there is no optimum product size.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productsizerange" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product size range</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The associated values specify the lengths of the product
             that the user wants the primers to create, and is a space
             separated list of elements of the form 
             (x)-(y) 
             where an (x)-(y) pair is a legal range of lengths for the
             product. For example, if one wants PCR products to be between
             100 to 150 bases (inclusive) then one would set this parameter
             to 100-150. If one desires PCR products in either the range from
             100 to 150 bases or in the range from 200 to 250 bases then one
             would set this parameter to 100-150 200-250. 
             EPrimer3 favors ranges to the left side of the parameter string.
             EPrimer3 will return legal primers pairs in the first range
             regardless the value of the objective function for these pairs.
             Only if there are an insufficient number of primers in the first
             range will EPrimer3 return primers in a subsequent range.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productotm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The optimum melting temperature for the PCR product. 0
             indicates that there is no optimum temperature.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productmintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The minimum allowed melting temperature of the amplicon.
             Please see the documentation on the maximum melting temperature
             of the product for details.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="productmaxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Product maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed melting temperature of the amplicon.
             Product Tm is calculated using the formula from Bolton and
             McCarthy, PNAS 84:1390 (1962) as presented in Sambrook, Fritsch
             and Maniatis, Molecular Cloning, p 11.46 (1989, CSHL Press). 
             Tm = 81.5 + 16.6(log10([Na+])) + .41*(%GC) - 600/length 
             Where [Na+} is the molar sodium concentration, (%GC) is the
             percent of Gs and Cs in the sequence, and length is the length
             of the sequence. 
             A similar formula is used by the prime primer selection program
             in GCG http://www.gcg.com), which instead uses 675.0/length in
             the last term (after F. Baldino, Jr, M.-F. Chesselet, and M.E.
             Lewis, Methods in Enzymology 168:766 (1989) eqn (1) on page 766
             without the mismatch and formamide terms). The formulas here and
             in Baldino et al. assume Na+ rather than K+. According to J.G.
             Wetmur, Critical Reviews in BioChem. and Mol. Bio. 26:227 (1991)
             50 mM K+ should be equivalent in these formulae to .2 M Na+.
             EPrimer3 uses the same salt concentration value for calculating
             both the primer melting temperature and the oligo melting
             temperature. If you are planning to use the PCR product for
             hybridization later this behavior will not give you the Tm under
             hybridization conditions.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoexcludedregion" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo excluded region</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Middle oligos may not overlap any region specified by
             this tag. The associated value must be a space-separated list of
             
             (start),(end) 
             pairs, where (start) is the index of the first base of an
             excluded region, and (end) is the last. Often one would make
             Target regions excluded regions for internal oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoinput" type="xsd:string">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo input sequence (if any)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The sequence of an internal oligo to check and around
             which to design forward and reverse primers. Must be a substring
             of SEQUENCE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoosize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum length (in bases) of an internal oligo. EPrimer3
             will attempt to pick primers close to this length.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligominsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable length of an internal oligo. Must be
             greater than 0 and less than or equal to
             INTERNAL-OLIGO-MAX-SIZE.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable length (in bases) of an internal
             oligo. Currently this parameter cannot be larger than 35. This
             limit is governed by maximum oligo size for which EPrimer3's
             melting-temperature is valid.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligootm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Optimum melting temperature (Celsius) for an internal
             oligo. EPrimer3 will try to pick oligos with melting
             temperatures that are close to this temperature. The oligo
             melting temperature formula in EPrimer3 is that given in
             Rychlik, Spencer and Rhoads, Nucleic Acids Research, vol 18, num
             12, pp 6409-6412 and Breslauer, Frank, Bloeker and Marky, Proc.
             Natl. Acad. Sci. USA, vol 83, pp 3746-3750. Please refer to the
             former paper for background discussion.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomintm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum acceptable melting temperature(Celsius) for an
             internal oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxtm" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum Tm</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum acceptable melting temperature (Celsius) for an
             internal oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoogcpercent" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo optimum GC percent</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Internal oligo optimum GC percent.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomingc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo minimum GC</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Minimum allowable percentage of Gs and Cs in an internal
             oligo.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxgc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum GC</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum allowable percentage of Gs and Cs in any internal
             oligo generated by Primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligosaltconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo salt concentration (mM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The millimolar concentration of salt (usually KCl) in the
             hybridization. EPrimer3 uses this argument to calculate
             internal oligo melting temperatures.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligodnaconc" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo DNA concentration (nM)</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The nanomolar concentration of annealing internal oligo
             in the hybridization.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoselfany" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum self
                    complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable local alignment score when testing
             an internal oligo for (local) self-complementarity. Local
             self-complementarity is taken to predict the tendency of oligos
             to anneal to themselves The scoring system gives 1.00 for
             complementary bases, -0.25 for a match of any base (or N) with
             an N, -1.00 for a mismatch, and -2.00 for a gap. Only
             single-base-pair gaps are allowed. For example, the alignment 
             5' ATCGNA 3' 
             || | | 
             3' TA-CGT 5' 
             is allowed (and yields a score of 1.75), but the alignment 
             5' ATCCGNA 3' 
             || | | 
             3' TA--CGT 5' 
             is not considered. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable local alignment between
             two oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligoselfend" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum 3' self
                    complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable 3'-anchored global alignment score
             when testing a single oligo for self-complementarity. 
             The scoring system is as for the Maximum Complementarity
             argument. In the examples above the scores are 7.00 and 6.00
             respectively. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable 3'-anchored global
             alignment between two oligos. In order to estimate 3'-anchored
             global alignments for candidate oligos, Primer assumes that the
             sequence from which to choose oligos is presented 5' to 3'. 
             INTERNAL-OLIGO-SELF-END is meaningless when applied to internal
             oligos used for hybridization-based detection, since
             primer-dimer will not occur. We recommend that
             INTERNAL-OLIGO-SELF-END be set at least as high as
             INTERNAL-OLIGO-SELF-ANY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxpolyx" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum polynucleotide
                    repeat</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable length of an internal oligo
             mononucleotide repeat, for example AAAAAA.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="oligomaxmishyb" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Internal oligo maximum mishybridization</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Similar to MAX-MISPRIMING except that this parameter
             applies to the similarity of candidate internal oligos to the
             library specified in INTERNAL-OLIGO-MISHYB-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="explainflag" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Explain flag</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If this flag is true, produce LEFT-EXPLAIN,
             RIGHT-EXPLAIN, and INTERNAL-OLIGO-EXPLAIN output tags, which are
             intended to provide information on the number of oligos and
             primer pairs that EPrimer3 examined, and statistics on the
             number discarded for various reasons.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="fileflag" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Create results files for each sequence</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If the associated value is true, then EPrimer3 creates
             two output files for each input SEQUENCE. File (sequence-id).for
             lists all acceptable forward primers for (sequence-id), and
             (sequence-id).rev lists all acceptable reverse primers for
             (sequence-id), where (sequence-id) is the value of the
             SEQUENCE-ID tag (which must be supplied). In addition, if the
             input tag TASK is 1 or 4, EPrimer3 produces a file
             (sequence-id).int, which lists all acceptable internal oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="firstbaseindex" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>First base index</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>This parameter is the index of the first base in the
             input sequence. For input and output using 1-based indexing
             (such as that used in GenBank and to which many users are
             accustomed) set this parameter to 1. For input and output using
             0-based indexing set this parameter to 0. (This parameter also
             affects the indexes in the contents of the files produced when
             the primer file flag is set.)</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="pickanyway" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Pick anyway</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>If true pick a primer pair even if LEFT-INPUT,
             RIGHT-INPUT, or INTERNAL-OLIGO-INPUT violates specific
             constraints.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxmispriming" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer maximum mispriming</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed weighted similarity with any sequence
             in MISPRIMING-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="pairmaxmispriming" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Primer pair maximum mispriming</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowed sum of weighted similarities of a
             primer pair (one similarity for each primer) with any single
             sequence in MISPRIMING-LIBRARY.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="numnsaccepted" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum Ns accepted in a primer</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Maximum number of unknown bases (N) allowable in any
             primer.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="selfany" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum self complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable local alignment score when testing
             a single primer for (local) self-complementarity and the maximum
             allowable local alignment score when testing for
             complementarity between forward and reverse primers. Local
             self-complementarity is taken to predict the tendency of primers
             to anneal to each other without necessarily causing
             self-priming in the PCR. The scoring system gives 1.00 for
             complementary bases, -0.25 for a match of any base (or N) with
             an N, -1.00 for a mismatch, and -2.00 for a gap. Only
             single-base-pair gaps are allowed. For example, the alignment 
             5' ATCGNA 3' 
             ...|| | | 
             3' TA-CGT 5' 
             is allowed (and yields a score of 1.75), but the alignment 
             5' ATCCGNA 3' 
             ...|| | | 
             3' TA--CGT 5' 
             is not considered. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable local alignment between
             two oligos.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="selfend" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum 3' self complementarity</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum allowable 3'-anchored global alignment score
             when testing a single primer for self-complementarity, and the
             maximum allowable 3'-anchored global alignment score when
             testing for complementarity between forward and reverse primers.
             The 3'-anchored global alignment score is taken to predict the
             likelihood of PCR-priming primer-dimers, for example 
             5' ATGCCCTAGCTTCCGGATG 3' 
             .............||| ||||| 
             ..........3' AAGTCCTACATTTAGCCTAGT 5' 
             or 
             5' AGGCTATGGGCCTCGCGA 3' 
             ...............|||||| 
             ............3' AGCGCTCCGGGTATCGGA 5' 
             The scoring system is as for the Maximum Complementarity
             argument. In the examples above the scores are 7.00 and 6.00
             respectively. Scores are non-negative, and a score of 0.00
             indicates that there is no reasonable 3'-anchored global
             alignment between two oligos. In order to estimate 3'-anchored
             global alignments for candidate primers and primer pairs, Primer
             assumes that the sequence from which to choose primers is
             presented 5' to 3'. It is nonsensical to provide a larger value
             for this parameter than for the Maximum (local) Complementarity
             parameter because the score of a local alignment will always be
             at least as great as the score of a global alignment.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="maxendstability" type="xsd:float">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Maximum 3' end stability</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The maximum stability for the five 3' bases of a forward
             or reverse primer. Bigger numbers mean more stable 3' ends. The
             value is the maximum delta G for duplex disruption for the five
             3' bases as calculated using the nearest neighbor parameters
             published in Breslauer, Frank, Bloeker and Marky, Proc. Natl.
             Acad. Sci. USA, vol 83, pp 3746-3750. EPrimer3 uses a completely
             permissive default value for backward compatibility (which we
             may change in the next release). Rychlik recommends a maximum
             value of 9 (Wojciech Rychlik, 'Selection of Primers for
             Polymerase Chain Reaction' in BA White, Ed., 'Methods in
             Molecular Biology, Vol. 15: PCR Protocols: Current Methods and
             Applications', 1993, pp 31-40, Humana Press, Totowa NJ).</xsd:documentation>
                  </xsd:annotation>
               </element>
            </sequence>
         </complexType>
         <element name="runAndWaitForResponse">
            <complexType>
               <sequence>
                  <element name="eprimer3Result" type="impl:Teprimer3Result"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="Teprimer3Result">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="outfile" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="TSoaplabException">
            <sequence/>
         </complexType>
         <element name="fault" type="impl:TSoaplabException"/>
         <element name="createAndRun">
            <complexType>
               <sequence>
                  <element name="eprimer3" type="impl:Teprimer3"/>
               </sequence>
            </complexType>
         </element>
         <element name="createAndRunResponse">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitFor">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitForResponse">
            <complexType/>
         </element>
         <element name="getStatus">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getStatusResponse">
            <complexType>
               <sequence>
                  <element name="status" type="impl:Tstatus"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="Tstatus">
            <sequence>
               <element name="inProgress" type="xsd:boolean"/>
               <element name="detailed" type="xsd:string"/>
               <element name="erroneous" type="xsd:boolean"/>
               <element name="description" type="xsd:string"/>
               <element name="completed" type="xsd:boolean"/>
               <element name="asString" type="xsd:string"/>
               <element name="successful" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getResults">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getResultsResponse">
            <complexType>
               <sequence>
                  <element name="eprimer3Result" type="impl:Teprimer3Result"/>
               </sequence>
            </complexType>
         </element>
      </schema>
  </wsdl:types>
  <wsdl:message name="getResultsRequest">
      <wsdl:part element="impl:getResults" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForRequest">
      <wsdl:part element="impl:runAndWaitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SoaplabException">
      <wsdl:part element="impl:fault" name="fault"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForResponse">
      <wsdl:part element="impl:runAndWaitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waitForRequest">
      <wsdl:part element="impl:waitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunRequest">
      <wsdl:part element="impl:createAndRun" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getResultsResponse">
      <wsdl:part element="impl:getResultsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunResponse">
      <wsdl:part element="impl:createAndRunResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
      <wsdl:part element="impl:getStatusResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
      <wsdl:part element="impl:getStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waitForResponse">
      <wsdl:part element="impl:waitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="nucleic_primers__eprimer3">
      <wsdl:operation name="runAndWaitFor">
         <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
         <wsdl:input message="impl:runAndWaitForRequest" name="runAndWaitForRequest"/>
         <wsdl:output message="impl:runAndWaitForResponse" name="runAndWaitForResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="createAndRun">
         <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
         <wsdl:input message="impl:createAndRunRequest" name="createAndRunRequest"/>
         <wsdl:output message="impl:createAndRunResponse" name="createAndRunResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="waitFor">
         <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
         <wsdl:input message="impl:waitForRequest" name="waitForRequest"/>
         <wsdl:output message="impl:waitForResponse" name="waitForResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="getStatus">
         <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
         <wsdl:input message="impl:getStatusRequest" name="getStatusRequest"/>
         <wsdl:output message="impl:getStatusResponse" name="getStatusResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="getResults">
         <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
         <wsdl:input message="impl:getResultsRequest" name="getResultsRequest"/>
         <wsdl:output message="impl:getResultsResponse" name="getResultsResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="nucleic_primers.eprimer3.derivedSoapBinding"
                 type="impl:nucleic_primers__eprimer3">
      <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <wsdl:operation name="runAndWaitFor">
         <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="runAndWaitForRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="runAndWaitForResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="createAndRun">
         <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="createAndRunRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="createAndRunResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="waitFor">
         <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="waitForRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="waitForResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getStatus">
         <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="getStatusRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="getStatusResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getResults">
         <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="getResultsRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="getResultsResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="eprimer3Service">
      <wsdl:port binding="impl:nucleic_primers.eprimer3.derivedSoapBinding"
                 name="nucleic_primers.eprimer3.derived">
         <wsdlsoap:address location="http://ws.soatrader.com/embnet.dkfz-heidelberg.de/0.1/eprimer3Service"/>
      </wsdl:port>
  </wsdl:service>
</wsdl:definitions>