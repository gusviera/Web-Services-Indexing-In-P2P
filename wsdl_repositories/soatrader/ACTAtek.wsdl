<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soat="http://ws.soatrader.com/"
             xmlns:tns="http://www.hectrix.com/ACTAtek.service"
             xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:ns="http://www.hectrix.com/ACTAtek.xsd"
             xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
             xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
             xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
             name="ACTAtek"
             targetNamespace="http://www.hectrix.com/ACTAtek.service">
   <wsdl:message xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" name="SOATraderLicense">
      <wsdl:part element="soat:SOATraderLicense" name="SOATraderLicense"/>
   </wsdl:message>
   <wsdl:message xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" name="SOATraderUsageStatistics">
      <wsdl:part element="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
   </wsdl:message>

   <types>
      <schema xmlns="http://www.w3.org/2001/XMLSchema"
              targetNamespace="http://ws.soatrader.com/"
              elementFormDefault="qualified">
         <element type="string" name="SOATraderLicense"/>
         <element type="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
         <complexType name="SOATraderUsageStatistics">
            <sequence>
               <element type="decimal" name="HitsMade"/>
               <element type="decimal" name="HitsLeft"/>
            </sequence>
         </complexType>
      </schema>

      <documentation>

 </documentation>

      <schema xmlns="http://www.w3.org/2001/XMLSchema"
              targetNamespace="http://www.hectrix.com/ACTAtek.xsd"
              elementFormDefault="unqualified"
              attributeFormDefault="unqualified">
  
         <simpleType name="eventType">
            <restriction base="xsd:string">
               <enumeration value="UNKNOWN"/>
               <enumeration value="IN"/>
               <enumeration value="OUT"/>
               <enumeration value="F1"/>
               <enumeration value="F2"/>
               <enumeration value="F3"/>
               <enumeration value="F4"/>
               <enumeration value="F5"/>
               <enumeration value="F6"/>
               <enumeration value="F7"/>
               <enumeration value="F8"/>
               <enumeration value="F9"/>
               <enumeration value="F10"/>
               <enumeration value="ID-UNKNOWN"/>
               <enumeration value="REJECTED"/>
               <enumeration value="ID-RESERVED"/>
               <enumeration value="RESET-ALL"/>
               <enumeration value="RESET-ACC"/>
               <enumeration value="RESET-DEVICE"/>
               <enumeration value="RESET-PASSWORD"/>
               <enumeration value="RESET-DEFAULT"/>
               <enumeration value="SYSTEM-LOGIN"/>
               <enumeration value="ADMIN-LOGIN"/>
               <enumeration value="USER-LOGIN"/>
               <enumeration value="NETWORK-CHANGE"/>
               <enumeration value="PATCHED"/>
               <enumeration value="BACKUP-DB"/>
               <enumeration value="RESTORE-DB"/>
               <enumeration value="SYSTEM-RSVD"/>
               <enumeration value="ENROLL-USER"/>
               <enumeration value="REMOTE-DOOR-OPEN"/>
               <enumeration value="REMOVE-USER"/>
               <enumeration value="SUSPEND-USER"/>
               <enumeration value="EDIT-EVENT"/>
               <enumeration value="RESET-ADMIN-PW"/>
               <enumeration value="ADMIN-RSVDIT"/>
               <enumeration value="F11"/>
               <enumeration value="F12"/>
               <enumeration value="F13"/>
               <enumeration value="F14"/>
               <enumeration value="F15"/>
               <enumeration value="F16"/>
               <enumeration value="F17"/>
               <enumeration value="F18"/>
               <enumeration value="F19"/>
               <enumeration value="F20"/>
               <enumeration value="F21"/>
               <enumeration value="F22"/>
               <enumeration value="F23"/>
               <enumeration value="F24"/>
               <enumeration value="F25"/>
               <enumeration value="F26"/>
               <enumeration value="F27"/>
               <enumeration value="F28"/>
               <enumeration value="F29"/>
               <enumeration value="F30"/>
               <enumeration value="F31"/>
               <enumeration value="F32"/>
               <enumeration value="F33"/>
               <enumeration value="F34"/>
               <enumeration value="F35"/>
               <enumeration value="F36"/>
               <enumeration value="F37"/>
               <enumeration value="F38"/>
               <enumeration value="F39"/>
               <enumeration value="F40"/>
               <enumeration value="SCHEDULE-DOOR-OPEN"/>
               <enumeration value="SCHEDULE-DOOR-CLOSE"/>
               <enumeration value="SCHEDULE-BELL-ON"/>
               <enumeration value="DOOR-IS-OPENED"/>
               <enumeration value="DOOR-IS-CLOSED"/>
               <enumeration value="CASE-IS-OPENED"/>
               <enumeration value="CASE-IS-CLOSED"/>
               <enumeration value="ESCORT"/>
            </restriction>
         </simpleType>
         <simpleType name="AdminLevel">
            <restriction base="xsd:string">
               <enumeration value="PERSONALUSER"/>
               <enumeration value="NETWORKADMIN"/>
               <enumeration value="USERADMIN"/>
               <enumeration value="SUPERADMIN"/>
            </restriction>
         </simpleType>
         <simpleType name="FingerprintSecurityLevel">
            <restriction base="xsd:string">
               <enumeration value="LOWEST"/>
               <enumeration value="LOW"/>
               <enumeration value="NORMAL"/>
               <enumeration value="HIGH"/>
               <enumeration value="HIGHEST"/>
            </restriction>
         </simpleType>
         <simpleType name="Weekday">
            <restriction base="xsd:string">
               <enumeration value="SUNDAY"/>
               <enumeration value="MONDAY"/>
               <enumeration value="TUESDAY"/>
               <enumeration value="WEDNESDAY"/>
               <enumeration value="THURSDAY"/>
               <enumeration value="FRIDAY"/>
               <enumeration value="SATURDAY"/>
               <enumeration value="HOLIDAY"/>
            </restriction>
         </simpleType>
         <simpleType name="triggerType">
            <restriction base="xsd:string">
               <enumeration value="UNKNOWN"/>
               <enumeration value="IN"/>
               <enumeration value="OUT"/>
               <enumeration value="F1"/>
               <enumeration value="F2"/>
               <enumeration value="F3"/>
               <enumeration value="F4"/>
               <enumeration value="F5"/>
               <enumeration value="F6"/>
               <enumeration value="F7"/>
               <enumeration value="F8"/>
               <enumeration value="F9"/>
               <enumeration value="F10"/>
               <enumeration value="ID-UNKNOWN"/>
               <enumeration value="REJECTED"/>
               <enumeration value="ID-RESERVED"/>
               <enumeration value="RESET-ALL"/>
               <enumeration value="RESET-ACC"/>
               <enumeration value="RESET-DEVICE"/>
               <enumeration value="RESET-PASSWORD"/>
               <enumeration value="RESET-DEFAULT"/>
               <enumeration value="SYSTEM-LOGIN"/>
               <enumeration value="ADMIN-LOGIN"/>
               <enumeration value="USER-LOGIN"/>
               <enumeration value="NETWORK-CHANGE"/>
               <enumeration value="PATCHED"/>
               <enumeration value="BACKUP-DB"/>
               <enumeration value="RESTORE-DB"/>
               <enumeration value="SYSTEM-RSVD"/>
               <enumeration value="ENROLL-USER"/>
               <enumeration value="REMOTE-DOOR-OPEN"/>
               <enumeration value="REMOVE-USER"/>
               <enumeration value="SUSPEND-USER"/>
               <enumeration value="EDIT-EVENT"/>
               <enumeration value="RESET-ADMIN-PW"/>
               <enumeration value="ADMIN-RSVDIT"/>
               <enumeration value="F11"/>
               <enumeration value="F12"/>
               <enumeration value="F13"/>
               <enumeration value="F14"/>
               <enumeration value="F15"/>
               <enumeration value="F16"/>
               <enumeration value="F17"/>
               <enumeration value="F18"/>
               <enumeration value="F19"/>
               <enumeration value="F20"/>
               <enumeration value="F21"/>
               <enumeration value="F22"/>
               <enumeration value="F23"/>
               <enumeration value="F24"/>
               <enumeration value="F25"/>
               <enumeration value="F26"/>
               <enumeration value="F27"/>
               <enumeration value="F28"/>
               <enumeration value="F29"/>
               <enumeration value="F30"/>
               <enumeration value="F31"/>
               <enumeration value="F32"/>
               <enumeration value="F33"/>
               <enumeration value="F34"/>
               <enumeration value="F35"/>
               <enumeration value="F36"/>
               <enumeration value="F37"/>
               <enumeration value="F38"/>
               <enumeration value="F39"/>
               <enumeration value="F40"/>
               <enumeration value="SCHEDULE-DOOR-OPEN"/>
               <enumeration value="SCHEDULE-DOOR-CLOSE"/>
               <enumeration value="SCHEDULE-BELL-ON"/>
               <enumeration value="DOOR-IS-OPENED"/>
               <enumeration value="DOOR-IS-CLOSED"/>
               <enumeration value="CASE-IS-OPENED"/>
               <enumeration value="CASE-IS-CLOSED"/>
               <enumeration value="ESCORT"/>
               <enumeration value="TRIGGEREND"/>
            </restriction>
         </simpleType>
         <simpleType name="RelayID">
            <restriction base="xsd:string">
               <enumeration value="ONE"/>
               <enumeration value="TWO"/>
               <enumeration value="ALL"/>
            </restriction>
         </simpleType>
         <simpleType name="AutoInOutOption">
            <restriction base="xsd:string">
               <enumeration value="DISABLE"/>
               <enumeration value="ENABLE"/>
               <enumeration value="SPECIAL"/>
               <enumeration value="REJECTREPEATEDLOGIN"/>
            </restriction>
         </simpleType>
         <simpleType name="RelayOption">
            <restriction base="xsd:string">
               <enumeration value="RELAY-DISABLE"/>
               <enumeration value="ACCESS-GRANTED"/>
               <enumeration value="ACCESS-DENIED"/>
               <enumeration value="DOORBELL"/>
               <enumeration value="BELLSCHEDULE"/>
            </restriction>
         </simpleType>
         <complexType name="Agent">
            <sequence>
               <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="registrationTime" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastUpdate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastCheck" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastCheckStatus" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="active" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="link" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="AgentArray">
            <sequence>
               <element name="agents" type="ns:Agent" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Log">
            <sequence>
               <element name="logID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               <element name="trigger" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogArray">
            <sequence>
               <element name="log" type="ns:Log" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Status">
            <sequence>
               <element name="active" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="autoMatch" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="smartCard" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="fingerprint" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="password" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
            </sequence>
         </complexType>
         <complexType name="Department">
            <sequence>
               <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="departmentName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="departmentDescription" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="DepartmentArray">
            <sequence>
               <element name="department" type="ns:Department" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Timespec">
            <sequence>
               <element name="weekday" type="ns:Weekday" minOccurs="0" maxOccurs="unbounded"/>
               <element name="timePattern" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="AccessRight">
            <sequence>
               <element name="accessID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="quickAccess" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="timeSpec" type="ns:Timespec" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="Group">
            <sequence>
               <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="groupName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="accessRight" type="ns:AccessRight" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="GroupArray">
            <sequence>
               <element name="group" type="ns:Group" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Fingerprint">
            <sequence>
               <element name="image" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="FingerprintArray">
            <sequence>
               <element name="fingerprint" type="ns:Fingerprint" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="User">
            <sequence>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="lastName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="firstName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="otherName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="adminLevel" type="ns:AdminLevel" minOccurs="1" maxOccurs="1"/>
               <element name="usePassword" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="password" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="groupID" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
               <element name="fingerprintSecurityLevel" type="ns:FingerprintSecurityLevel"
                        minOccurs="1"
                        maxOccurs="1"/>
               <element name="status" type="ns:Status" minOccurs="1" maxOccurs="1"/>
               <element name="fingerprints" type="ns:FingerprintArray" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="cardsn" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="UserArray">
            <sequence>
               <element name="user" type="ns:User" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Trigger">
            <sequence>
               <element name="triggerType" type="ns:triggerType" minOccurs="1" maxOccurs="1"/>
               <element name="triggerName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="timeSpec" type="ns:Timespec" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="TriggerArray">
            <sequence>
               <element name="trigger" type="ns:Trigger" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getLogsCriteria">
            <sequence>
               <element name="from" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="to" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="employeeName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="employeeID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="trigger" type="ns:eventType" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getUsersCriteria">
            <sequence>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="partialUserID" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="lastName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="firstName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="otherName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getGroupsCriteria">
            <sequence>
               <element name="groupID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getTriggersCriteria">
            <sequence>
               <element name="triggerType" type="ns:triggerType" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="TerminalStatus">
            <sequence>
               <element name="modelNumber" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="serialNumber" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="firmwareVersion" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="FAMVersion" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="registeredUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="maximumUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="automatchUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="maximumAutomatchUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="currentStatus" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Terminal">
            <sequence>
               <element name="terminalID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="terminalType" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="terminalName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="terminalIP" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="TerminalArray">
            <sequence>
               <element name="terminal" type="ns:Terminal" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogDetail">
            <sequence>
               <element name="logID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="userName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               <element name="trigger" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="terminalName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="jpegPhoto" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="remark" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogDetailArray">
            <sequence>
               <element name="logDetail" type="ns:LogDetail" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <element name="sessionID" type="xsd:long"/>
         <element name="status" type="xsd:string"/>
         <element name="agents" type="ns:AgentArray"/>
         <element name="updatedAgent" type="ns:Agent"/>
         <element name="logs" type="ns:LogArray"/>
         <element name="userID" type="xsd:string"/>
         <element name="users" type="ns:UserArray"/>
         <element name="user" type="ns:User"/>
         <element name="message" type="xsd:string"/>
         <element name="departmentID" type="xsd:int"/>
         <element name="departments" type="ns:DepartmentArray"/>
         <element name="groupID" type="xsd:int"/>
         <element name="groups" type="ns:GroupArray"/>
         <element name="triggers" type="ns:TriggerArray"/>
         <element name="version" type="xsd:string"/>
         <element name="terminalStatus" type="ns:TerminalStatus"/>
         <element name="terminalList" type="ns:TerminalArray"/>
         <element name="nopConstant" type="xsd:string"/>
         <element name="jpegPhoto" type="xsd:base64Binary"/>
         <element name="fingerprint" type="ns:Fingerprint"/>
         <element name="fpSecurityLevel" type="ns:FingerprintSecurityLevel"/>
         <element name="sec" type="xsd:int"/>
         <element name="auto-in-out-option" type="ns:AutoInOutOption"/>
         <element name="enable" type="xsd:boolean"/>
         <element name="relayOpt" type="ns:RelayOption"/>
         <element name="serveraddr" type="xsd:string"/>
         <element name="systemData" type="xsd:base64Binary"/>
         <!-- operation request element -->
  <element name="login">
            <complexType>
               <sequence>
                  <element name="username" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="password" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="loginResponse">
            <complexType>
               <sequence>
                  <element ref="ns:sessionID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="logout">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="logoutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRegisteredAgents">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRegisteredAgentsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:agents" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="pollLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="agent" type="ns:Agent" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="pollLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:updatedAgent" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getLogsCriteria" type="ns:getLogsCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:logs" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                  <element name="employeeID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="event" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:userID" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUsers">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getUsersCriteria" type="ns:getUsersCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUsersResponse">
            <complexType>
               <sequence>
                  <element ref="ns:users" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getMyself">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getMyselfResponse">
            <complexType>
               <sequence>
                  <element ref="ns:user" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateMyself">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateMyselfResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="activateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="activateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deactivateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deactivateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:message" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="message" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="department" type="ns:Department" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:departmentID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="department" type="ns:Department" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getDepartments">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getDepartmentsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:departments" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="group" type="ns:Group" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:groupID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getGroups">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getGroupsCriteria" type="ns:getGroupsCriteria" minOccurs="0"
                           maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getGroupsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:groups" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="group" type="ns:Group" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTriggers">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getTriggersCriteria" type="ns:getTriggersCriteria" minOccurs="0"
                           maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTriggersResponse">
            <complexType>
               <sequence>
                  <element ref="ns:triggers" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateTrigger">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="trigger" type="ns:Trigger" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateTriggerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="clearTrigger">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="triggerType" type="ns:triggerType" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="clearTriggerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="openDoor">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="doorID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="openDoorResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="openRelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="openRelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="closeRelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="closeRelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="registerAgent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="agentVersion" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="magic" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="registrationID" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="initSync" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="registerAgentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="unregisterAgent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="unregisterAgentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getAPIVersion">
            <complexType>
               <sequence>
    </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getAPIVersionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:version" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalStatus">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalStatusResponse">
            <complexType>
               <sequence>
                  <element ref="ns:terminalStatus" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalList">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalListResponse">
            <complexType>
               <sequence>
                  <element ref="ns:terminalList" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="nop">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="nopResponse">
            <complexType>
               <sequence>
                  <element ref="ns:nopConstant" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogPhoto">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogPhotoResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="registerFPUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="registerFPUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:fingerprint" minOccurs="0" maxOccurs="1"/>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getFullLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getLogsCriteria" type="ns:getLogsCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="limit" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getFullLogsResponse">
            <complexType>
               <sequence>
                  <element name="detailLogs" type="ns:LogDetailArray" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="resetLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="resetLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getFpSecurityLevel">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getFpSecurityLevelResponse">
            <complexType>
               <sequence>
                  <element ref="ns:fpSecurityLevel" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setFpSecurityLevel">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:fpSecurityLevel" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setFpSecurityLevelResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRelayDelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRelayDelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:sec" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setRelayDelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
                  <element name="sec" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setRelayDelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getAutoInOut">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getAutoInOutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:auto-in-out-option" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setAutoInOut">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:auto-in-out-option" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setAutoInOutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogUnauthorizedEvent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogUnauthorizedEventResponse">
            <complexType>
               <sequence>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setLogUnauthorizedEvent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setLogUnauthorizedEventResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setRelayOption">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
                  <element name="relayOpt" type="ns:RelayOption" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setRelayOptionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRelayOption">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRelayOptionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:relayOpt" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setSNTP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setSNTPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getSNTP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getSNTPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:enable" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setSNTPServer">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:serveraddr" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setSNTPServerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getSNTPServer">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getSNTPServerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:serveraddr" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalDateTime">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalDateTimeResponse">
            <complexType>
               <sequence>
                  <element name="terminalDate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setTerminalDateTime">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalDate" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setTerminalDateTimeResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTimeZone">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTimeZoneResponse">
            <complexType>
               <sequence>
                  <element name="timezone" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setTimeZone">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="timezone" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setTimeZoneResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getCaptureFingerprint">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getCaptureFingerprintResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="initCaptureFP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="initCaptureFPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="lock">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="deviceNodeDbId" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="lockResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="unlock">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="deviceNodeDbId" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="unlockResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="systemBackup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="systemBackupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:systemData" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="systemRestore">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:systemData" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="systemRestoreResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUsersDb">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUsersDbResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="daysToKeep" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteLogsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
      </schema>
      <schema xmlns="http://www.w3.org/2001/XMLSchema"
              targetNamespace="http://www.hectrix.com/ACTAtek.xsd"
              elementFormDefault="unqualified"
              attributeFormDefault="unqualified">
  
         <simpleType name="eventType">
            <restriction base="xsd:string">
               <enumeration value="UNKNOWN"/>
               <enumeration value="IN"/>
               <enumeration value="OUT"/>
               <enumeration value="F1"/>
               <enumeration value="F2"/>
               <enumeration value="F3"/>
               <enumeration value="F4"/>
               <enumeration value="F5"/>
               <enumeration value="F6"/>
               <enumeration value="F7"/>
               <enumeration value="F8"/>
               <enumeration value="F9"/>
               <enumeration value="F10"/>
               <enumeration value="ID-UNKNOWN"/>
               <enumeration value="REJECTED"/>
               <enumeration value="ID-RESERVED"/>
               <enumeration value="RESET-ALL"/>
               <enumeration value="RESET-ACC"/>
               <enumeration value="RESET-DEVICE"/>
               <enumeration value="RESET-PASSWORD"/>
               <enumeration value="RESET-DEFAULT"/>
               <enumeration value="SYSTEM-LOGIN"/>
               <enumeration value="ADMIN-LOGIN"/>
               <enumeration value="USER-LOGIN"/>
               <enumeration value="NETWORK-CHANGE"/>
               <enumeration value="PATCHED"/>
               <enumeration value="BACKUP-DB"/>
               <enumeration value="RESTORE-DB"/>
               <enumeration value="SYSTEM-RSVD"/>
               <enumeration value="ENROLL-USER"/>
               <enumeration value="REMOTE-DOOR-OPEN"/>
               <enumeration value="REMOVE-USER"/>
               <enumeration value="SUSPEND-USER"/>
               <enumeration value="EDIT-EVENT"/>
               <enumeration value="RESET-ADMIN-PW"/>
               <enumeration value="ADMIN-RSVDIT"/>
               <enumeration value="F11"/>
               <enumeration value="F12"/>
               <enumeration value="F13"/>
               <enumeration value="F14"/>
               <enumeration value="F15"/>
               <enumeration value="F16"/>
               <enumeration value="F17"/>
               <enumeration value="F18"/>
               <enumeration value="F19"/>
               <enumeration value="F20"/>
               <enumeration value="F21"/>
               <enumeration value="F22"/>
               <enumeration value="F23"/>
               <enumeration value="F24"/>
               <enumeration value="F25"/>
               <enumeration value="F26"/>
               <enumeration value="F27"/>
               <enumeration value="F28"/>
               <enumeration value="F29"/>
               <enumeration value="F30"/>
               <enumeration value="F31"/>
               <enumeration value="F32"/>
               <enumeration value="F33"/>
               <enumeration value="F34"/>
               <enumeration value="F35"/>
               <enumeration value="F36"/>
               <enumeration value="F37"/>
               <enumeration value="F38"/>
               <enumeration value="F39"/>
               <enumeration value="F40"/>
               <enumeration value="SCHEDULE-DOOR-OPEN"/>
               <enumeration value="SCHEDULE-DOOR-CLOSE"/>
               <enumeration value="SCHEDULE-BELL-ON"/>
               <enumeration value="DOOR-IS-OPENED"/>
               <enumeration value="DOOR-IS-CLOSED"/>
               <enumeration value="CASE-IS-OPENED"/>
               <enumeration value="CASE-IS-CLOSED"/>
               <enumeration value="ESCORT"/>
            </restriction>
         </simpleType>
         <simpleType name="AdminLevel">
            <restriction base="xsd:string">
               <enumeration value="PERSONALUSER"/>
               <enumeration value="NETWORKADMIN"/>
               <enumeration value="USERADMIN"/>
               <enumeration value="SUPERADMIN"/>
            </restriction>
         </simpleType>
         <simpleType name="FingerprintSecurityLevel">
            <restriction base="xsd:string">
               <enumeration value="LOWEST"/>
               <enumeration value="LOW"/>
               <enumeration value="NORMAL"/>
               <enumeration value="HIGH"/>
               <enumeration value="HIGHEST"/>
            </restriction>
         </simpleType>
         <simpleType name="Weekday">
            <restriction base="xsd:string">
               <enumeration value="SUNDAY"/>
               <enumeration value="MONDAY"/>
               <enumeration value="TUESDAY"/>
               <enumeration value="WEDNESDAY"/>
               <enumeration value="THURSDAY"/>
               <enumeration value="FRIDAY"/>
               <enumeration value="SATURDAY"/>
               <enumeration value="HOLIDAY"/>
            </restriction>
         </simpleType>
         <simpleType name="triggerType">
            <restriction base="xsd:string">
               <enumeration value="UNKNOWN"/>
               <enumeration value="IN"/>
               <enumeration value="OUT"/>
               <enumeration value="F1"/>
               <enumeration value="F2"/>
               <enumeration value="F3"/>
               <enumeration value="F4"/>
               <enumeration value="F5"/>
               <enumeration value="F6"/>
               <enumeration value="F7"/>
               <enumeration value="F8"/>
               <enumeration value="F9"/>
               <enumeration value="F10"/>
               <enumeration value="ID-UNKNOWN"/>
               <enumeration value="REJECTED"/>
               <enumeration value="ID-RESERVED"/>
               <enumeration value="RESET-ALL"/>
               <enumeration value="RESET-ACC"/>
               <enumeration value="RESET-DEVICE"/>
               <enumeration value="RESET-PASSWORD"/>
               <enumeration value="RESET-DEFAULT"/>
               <enumeration value="SYSTEM-LOGIN"/>
               <enumeration value="ADMIN-LOGIN"/>
               <enumeration value="USER-LOGIN"/>
               <enumeration value="NETWORK-CHANGE"/>
               <enumeration value="PATCHED"/>
               <enumeration value="BACKUP-DB"/>
               <enumeration value="RESTORE-DB"/>
               <enumeration value="SYSTEM-RSVD"/>
               <enumeration value="ENROLL-USER"/>
               <enumeration value="REMOTE-DOOR-OPEN"/>
               <enumeration value="REMOVE-USER"/>
               <enumeration value="SUSPEND-USER"/>
               <enumeration value="EDIT-EVENT"/>
               <enumeration value="RESET-ADMIN-PW"/>
               <enumeration value="ADMIN-RSVDIT"/>
               <enumeration value="F11"/>
               <enumeration value="F12"/>
               <enumeration value="F13"/>
               <enumeration value="F14"/>
               <enumeration value="F15"/>
               <enumeration value="F16"/>
               <enumeration value="F17"/>
               <enumeration value="F18"/>
               <enumeration value="F19"/>
               <enumeration value="F20"/>
               <enumeration value="F21"/>
               <enumeration value="F22"/>
               <enumeration value="F23"/>
               <enumeration value="F24"/>
               <enumeration value="F25"/>
               <enumeration value="F26"/>
               <enumeration value="F27"/>
               <enumeration value="F28"/>
               <enumeration value="F29"/>
               <enumeration value="F30"/>
               <enumeration value="F31"/>
               <enumeration value="F32"/>
               <enumeration value="F33"/>
               <enumeration value="F34"/>
               <enumeration value="F35"/>
               <enumeration value="F36"/>
               <enumeration value="F37"/>
               <enumeration value="F38"/>
               <enumeration value="F39"/>
               <enumeration value="F40"/>
               <enumeration value="SCHEDULE-DOOR-OPEN"/>
               <enumeration value="SCHEDULE-DOOR-CLOSE"/>
               <enumeration value="SCHEDULE-BELL-ON"/>
               <enumeration value="DOOR-IS-OPENED"/>
               <enumeration value="DOOR-IS-CLOSED"/>
               <enumeration value="CASE-IS-OPENED"/>
               <enumeration value="CASE-IS-CLOSED"/>
               <enumeration value="ESCORT"/>
               <enumeration value="TRIGGEREND"/>
            </restriction>
         </simpleType>
         <simpleType name="RelayID">
            <restriction base="xsd:string">
               <enumeration value="ONE"/>
               <enumeration value="TWO"/>
               <enumeration value="ALL"/>
            </restriction>
         </simpleType>
         <simpleType name="AutoInOutOption">
            <restriction base="xsd:string">
               <enumeration value="DISABLE"/>
               <enumeration value="ENABLE"/>
               <enumeration value="SPECIAL"/>
               <enumeration value="REJECTREPEATEDLOGIN"/>
            </restriction>
         </simpleType>
         <simpleType name="RelayOption">
            <restriction base="xsd:string">
               <enumeration value="RELAY-DISABLE"/>
               <enumeration value="ACCESS-GRANTED"/>
               <enumeration value="ACCESS-DENIED"/>
               <enumeration value="DOORBELL"/>
               <enumeration value="BELLSCHEDULE"/>
            </restriction>
         </simpleType>
         <complexType name="Agent">
            <sequence>
               <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="registrationTime" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastUpdate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastCheck" type="xsd:dateTime" minOccurs="0" maxOccurs="1"/>
               <element name="lastCheckStatus" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="active" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="link" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="AgentArray">
            <sequence>
               <element name="agents" type="ns:Agent" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Log">
            <sequence>
               <element name="logID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               <element name="trigger" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogArray">
            <sequence>
               <element name="log" type="ns:Log" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Status">
            <sequence>
               <element name="active" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="autoMatch" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="smartCard" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="fingerprint" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="password" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
            </sequence>
         </complexType>
         <complexType name="Department">
            <sequence>
               <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="departmentName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="departmentDescription" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="DepartmentArray">
            <sequence>
               <element name="department" type="ns:Department" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Timespec">
            <sequence>
               <element name="weekday" type="ns:Weekday" minOccurs="0" maxOccurs="unbounded"/>
               <element name="timePattern" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="AccessRight">
            <sequence>
               <element name="accessID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="quickAccess" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="timeSpec" type="ns:Timespec" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="Group">
            <sequence>
               <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="groupName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="accessRight" type="ns:AccessRight" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="GroupArray">
            <sequence>
               <element name="group" type="ns:Group" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Fingerprint">
            <sequence>
               <element name="image" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="FingerprintArray">
            <sequence>
               <element name="fingerprint" type="ns:Fingerprint" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="User">
            <sequence>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="lastName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="firstName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="otherName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="adminLevel" type="ns:AdminLevel" minOccurs="1" maxOccurs="1"/>
               <element name="usePassword" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               <element name="password" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="groupID" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
               <element name="fingerprintSecurityLevel" type="ns:FingerprintSecurityLevel"
                        minOccurs="1"
                        maxOccurs="1"/>
               <element name="status" type="ns:Status" minOccurs="1" maxOccurs="1"/>
               <element name="fingerprints" type="ns:FingerprintArray" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="cardsn" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="UserArray">
            <sequence>
               <element name="user" type="ns:User" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Trigger">
            <sequence>
               <element name="triggerType" type="ns:triggerType" minOccurs="1" maxOccurs="1"/>
               <element name="triggerName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="timeSpec" type="ns:Timespec" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
         </complexType>
         <complexType name="TriggerArray">
            <sequence>
               <element name="trigger" type="ns:Trigger" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getLogsCriteria">
            <sequence>
               <element name="from" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="to" type="xsd:dateTime" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="employeeName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="employeeID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="trigger" type="ns:eventType" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getUsersCriteria">
            <sequence>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="partialUserID" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="lastName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="firstName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="otherName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getGroupsCriteria">
            <sequence>
               <element name="groupID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="getTriggersCriteria">
            <sequence>
               <element name="triggerType" type="ns:triggerType" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="TerminalStatus">
            <sequence>
               <element name="modelNumber" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="serialNumber" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="firmwareVersion" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="FAMVersion" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="description" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="registeredUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="maximumUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="automatchUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="maximumAutomatchUsers" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="currentStatus" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="Terminal">
            <sequence>
               <element name="terminalID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               <element name="terminalType" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="terminalName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="terminalIP" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="TerminalArray">
            <sequence>
               <element name="terminal" type="ns:Terminal" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogDetail">
            <sequence>
               <element name="logID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="userName" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="departmentName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               <element name="trigger" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
               <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               <element name="terminalName" type="xsd:string" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="jpegPhoto" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"
                        nillable="true"/>
               <element name="remark" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
            </sequence>
         </complexType>
         <complexType name="LogDetailArray">
            <sequence>
               <element name="logDetail" type="ns:LogDetail" minOccurs="0" maxOccurs="unbounded"
                        nillable="true"/>
            </sequence>
         </complexType>
         <element name="sessionID" type="xsd:long"/>
         <element name="status" type="xsd:string"/>
         <element name="agents" type="ns:AgentArray"/>
         <element name="updatedAgent" type="ns:Agent"/>
         <element name="logs" type="ns:LogArray"/>
         <element name="userID" type="xsd:string"/>
         <element name="users" type="ns:UserArray"/>
         <element name="user" type="ns:User"/>
         <element name="message" type="xsd:string"/>
         <element name="departmentID" type="xsd:int"/>
         <element name="departments" type="ns:DepartmentArray"/>
         <element name="groupID" type="xsd:int"/>
         <element name="groups" type="ns:GroupArray"/>
         <element name="triggers" type="ns:TriggerArray"/>
         <element name="version" type="xsd:string"/>
         <element name="terminalStatus" type="ns:TerminalStatus"/>
         <element name="terminalList" type="ns:TerminalArray"/>
         <element name="nopConstant" type="xsd:string"/>
         <element name="jpegPhoto" type="xsd:base64Binary"/>
         <element name="fingerprint" type="ns:Fingerprint"/>
         <element name="fpSecurityLevel" type="ns:FingerprintSecurityLevel"/>
         <element name="sec" type="xsd:int"/>
         <element name="auto-in-out-option" type="ns:AutoInOutOption"/>
         <element name="enable" type="xsd:boolean"/>
         <element name="relayOpt" type="ns:RelayOption"/>
         <element name="serveraddr" type="xsd:string"/>
         <element name="systemData" type="xsd:base64Binary"/>
         <!-- operation request element -->
  <element name="login">
            <complexType>
               <sequence>
                  <element name="username" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="password" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="loginResponse">
            <complexType>
               <sequence>
                  <element ref="ns:sessionID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="logout">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="logoutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRegisteredAgents">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRegisteredAgentsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:agents" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="pollLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="agent" type="ns:Agent" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="pollLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:updatedAgent" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getLogsCriteria" type="ns:getLogsCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:logs" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
                  <element name="employeeID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="event" type="ns:eventType" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:userID" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUsers">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getUsersCriteria" type="ns:getUsersCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUsersResponse">
            <complexType>
               <sequence>
                  <element ref="ns:users" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getMyself">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getMyselfResponse">
            <complexType>
               <sequence>
                  <element ref="ns:user" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateMyself">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="user" type="ns:User" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateMyselfResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="activateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="activateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deactivateUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deactivateUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:message" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="message" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteUserMessage">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteUserMessageResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="department" type="ns:Department" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:departmentID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="department" type="ns:Department" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getDepartments">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getDepartmentsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:departments" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteDepartment">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="departmentID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteDepartmentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="addGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="group" type="ns:Group" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="addGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:groupID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getGroups">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getGroupsCriteria" type="ns:getGroupsCriteria" minOccurs="0"
                           maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getGroupsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:groups" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="group" type="ns:Group" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteGroup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="groupID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteGroupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTriggers">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getTriggersCriteria" type="ns:getTriggersCriteria" minOccurs="0"
                           maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTriggersResponse">
            <complexType>
               <sequence>
                  <element ref="ns:triggers" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="updateTrigger">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="trigger" type="ns:Trigger" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="updateTriggerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="clearTrigger">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="triggerType" type="ns:triggerType" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="clearTriggerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="openDoor">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="doorID" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="openDoorResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="openRelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="openRelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="closeRelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="closeRelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="registerAgent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
                  <element name="agentVersion" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="magic" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="registrationID" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="initSync" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="registerAgentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="unregisterAgent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="ip" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="port" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="unregisterAgentResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getAPIVersion">
            <complexType>
               <sequence>
    </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getAPIVersionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:version" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalStatus">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalStatusResponse">
            <complexType>
               <sequence>
                  <element ref="ns:terminalStatus" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalList">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalListResponse">
            <complexType>
               <sequence>
                  <element ref="ns:terminalList" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="nop">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="nopResponse">
            <complexType>
               <sequence>
                  <element ref="ns:nopConstant" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogPhoto">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalSN" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
                  <element name="timestamp" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogPhotoResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="registerFPUser">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="userID" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="registerFPUserResponse">
            <complexType>
               <sequence>
                  <element ref="ns:fingerprint" minOccurs="0" maxOccurs="1"/>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getFullLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="getLogsCriteria" type="ns:getLogsCriteria" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
                  <element name="limit" type="xsd:int" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getFullLogsResponse">
            <complexType>
               <sequence>
                  <element name="detailLogs" type="ns:LogDetailArray" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="resetLog">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="resetLogResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getFpSecurityLevel">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getFpSecurityLevelResponse">
            <complexType>
               <sequence>
                  <element ref="ns:fpSecurityLevel" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setFpSecurityLevel">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:fpSecurityLevel" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setFpSecurityLevelResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRelayDelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRelayDelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:sec" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setRelayDelay">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
                  <element name="sec" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setRelayDelayResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getAutoInOut">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getAutoInOutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:auto-in-out-option" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setAutoInOut">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:auto-in-out-option" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setAutoInOutResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getLogUnauthorizedEvent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getLogUnauthorizedEventResponse">
            <complexType>
               <sequence>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setLogUnauthorizedEvent">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setLogUnauthorizedEventResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setRelayOption">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
                  <element name="relayOpt" type="ns:RelayOption" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setRelayOptionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getRelayOption">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="relayID" type="ns:RelayID" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getRelayOptionResponse">
            <complexType>
               <sequence>
                  <element ref="ns:relayOpt" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setSNTP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:enable" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setSNTPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getSNTP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getSNTPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:enable" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setSNTPServer">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:serveraddr" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setSNTPServerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getSNTPServer">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getSNTPServerResponse">
            <complexType>
               <sequence>
                  <element ref="ns:serveraddr" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTerminalDateTime">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTerminalDateTimeResponse">
            <complexType>
               <sequence>
                  <element name="terminalDate" type="xsd:dateTime" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setTerminalDateTime">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="terminalDate" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setTerminalDateTimeResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getTimeZone">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getTimeZoneResponse">
            <complexType>
               <sequence>
                  <element name="timezone" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="setTimeZone">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="timezone" type="xsd:string" minOccurs="0" maxOccurs="1" nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="setTimeZoneResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getCaptureFingerprint">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getCaptureFingerprintResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="initCaptureFP">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="initCaptureFPResponse">
            <complexType>
               <sequence>
                  <element ref="ns:jpegPhoto" minOccurs="0" maxOccurs="1"/>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="lock">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="deviceNodeDbId" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="lockResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="unlock">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="deviceNodeDbId" type="xsd:string" minOccurs="0" maxOccurs="1"
                           nillable="true"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="unlockResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="systemBackup">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="systemBackupResponse">
            <complexType>
               <sequence>
                  <element ref="ns:systemData" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="systemRestore">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element ref="ns:systemData" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="systemRestoreResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="getUsersDb">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="getUsersDbResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation request element -->
  <element name="deleteLogs">
            <complexType>
               <sequence>
                  <element name="sessionID" type="xsd:long" minOccurs="1" maxOccurs="1"/>
                  <element name="daysToKeep" type="xsd:int" minOccurs="1" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
         <!-- operation response element -->
  <element name="deleteLogsResponse">
            <complexType>
               <sequence>
                  <element ref="ns:status" minOccurs="0" maxOccurs="1"/>
               </sequence>
            </complexType>
         </element>
      </schema>

   </types>

   <message name="loginRequest">
      <part name="parameters" element="ns:login"/>
   </message>

   <message name="loginResponse">
      <part name="parameters" element="ns:loginResponse"/>
   </message>

   <message name="logoutRequest">
      <part name="parameters" element="ns:logout"/>
   </message>

   <message name="logoutResponse">
      <part name="parameters" element="ns:logoutResponse"/>
   </message>

   <message name="getRegisteredAgentsRequest">
      <part name="parameters" element="ns:getRegisteredAgents"/>
   </message>

   <message name="getRegisteredAgentsResponse">
      <part name="parameters" element="ns:getRegisteredAgentsResponse"/>
   </message>

   <message name="pollLogRequest">
      <part name="parameters" element="ns:pollLog"/>
   </message>

   <message name="pollLogResponse">
      <part name="parameters" element="ns:pollLogResponse"/>
   </message>

   <message name="getLogsRequest">
      <part name="parameters" element="ns:getLogs"/>
   </message>

   <message name="getLogsResponse">
      <part name="parameters" element="ns:getLogsResponse"/>
   </message>

   <message name="addLogRequest">
      <part name="parameters" element="ns:addLog"/>
   </message>

   <message name="addLogResponse">
      <part name="parameters" element="ns:addLogResponse"/>
   </message>

   <message name="addUserRequest">
      <part name="parameters" element="ns:addUser"/>
   </message>

   <message name="addUserResponse">
      <part name="parameters" element="ns:addUserResponse"/>
   </message>

   <message name="getUsersRequest">
      <part name="parameters" element="ns:getUsers"/>
   </message>

   <message name="getUsersResponse">
      <part name="parameters" element="ns:getUsersResponse"/>
   </message>

   <message name="updateUserRequest">
      <part name="parameters" element="ns:updateUser"/>
   </message>

   <message name="updateUserResponse">
      <part name="parameters" element="ns:updateUserResponse"/>
   </message>

   <message name="deleteUserRequest">
      <part name="parameters" element="ns:deleteUser"/>
   </message>

   <message name="deleteUserResponse">
      <part name="parameters" element="ns:deleteUserResponse"/>
   </message>

   <message name="getMyselfRequest">
      <part name="parameters" element="ns:getMyself"/>
   </message>

   <message name="getMyselfResponse">
      <part name="parameters" element="ns:getMyselfResponse"/>
   </message>

   <message name="updateMyselfRequest">
      <part name="parameters" element="ns:updateMyself"/>
   </message>

   <message name="updateMyselfResponse">
      <part name="parameters" element="ns:updateMyselfResponse"/>
   </message>

   <message name="activateUserRequest">
      <part name="parameters" element="ns:activateUser"/>
   </message>

   <message name="activateUserResponse">
      <part name="parameters" element="ns:activateUserResponse"/>
   </message>

   <message name="deactivateUserRequest">
      <part name="parameters" element="ns:deactivateUser"/>
   </message>

   <message name="deactivateUserResponse">
      <part name="parameters" element="ns:deactivateUserResponse"/>
   </message>

   <message name="getUserMessageRequest">
      <part name="parameters" element="ns:getUserMessage"/>
   </message>

   <message name="getUserMessageResponse">
      <part name="parameters" element="ns:getUserMessageResponse"/>
   </message>

   <message name="updateUserMessageRequest">
      <part name="parameters" element="ns:updateUserMessage"/>
   </message>

   <message name="updateUserMessageResponse">
      <part name="parameters" element="ns:updateUserMessageResponse"/>
   </message>

   <message name="deleteUserMessageRequest">
      <part name="parameters" element="ns:deleteUserMessage"/>
   </message>

   <message name="deleteUserMessageResponse">
      <part name="parameters" element="ns:deleteUserMessageResponse"/>
   </message>

   <message name="addDepartmentRequest">
      <part name="parameters" element="ns:addDepartment"/>
   </message>

   <message name="addDepartmentResponse">
      <part name="parameters" element="ns:addDepartmentResponse"/>
   </message>

   <message name="updateDepartmentRequest">
      <part name="parameters" element="ns:updateDepartment"/>
   </message>

   <message name="updateDepartmentResponse">
      <part name="parameters" element="ns:updateDepartmentResponse"/>
   </message>

   <message name="getDepartmentsRequest">
      <part name="parameters" element="ns:getDepartments"/>
   </message>

   <message name="getDepartmentsResponse">
      <part name="parameters" element="ns:getDepartmentsResponse"/>
   </message>

   <message name="deleteDepartmentRequest">
      <part name="parameters" element="ns:deleteDepartment"/>
   </message>

   <message name="deleteDepartmentResponse">
      <part name="parameters" element="ns:deleteDepartmentResponse"/>
   </message>

   <message name="addGroupRequest">
      <part name="parameters" element="ns:addGroup"/>
   </message>

   <message name="addGroupResponse">
      <part name="parameters" element="ns:addGroupResponse"/>
   </message>

   <message name="getGroupsRequest">
      <part name="parameters" element="ns:getGroups"/>
   </message>

   <message name="getGroupsResponse">
      <part name="parameters" element="ns:getGroupsResponse"/>
   </message>

   <message name="updateGroupRequest">
      <part name="parameters" element="ns:updateGroup"/>
   </message>

   <message name="updateGroupResponse">
      <part name="parameters" element="ns:updateGroupResponse"/>
   </message>

   <message name="deleteGroupRequest">
      <part name="parameters" element="ns:deleteGroup"/>
   </message>

   <message name="deleteGroupResponse">
      <part name="parameters" element="ns:deleteGroupResponse"/>
   </message>

   <message name="getTriggersRequest">
      <part name="parameters" element="ns:getTriggers"/>
   </message>

   <message name="getTriggersResponse">
      <part name="parameters" element="ns:getTriggersResponse"/>
   </message>

   <message name="updateTriggerRequest">
      <part name="parameters" element="ns:updateTrigger"/>
   </message>

   <message name="updateTriggerResponse">
      <part name="parameters" element="ns:updateTriggerResponse"/>
   </message>

   <message name="clearTriggerRequest">
      <part name="parameters" element="ns:clearTrigger"/>
   </message>

   <message name="clearTriggerResponse">
      <part name="parameters" element="ns:clearTriggerResponse"/>
   </message>

   <message name="openDoorRequest">
      <part name="parameters" element="ns:openDoor"/>
   </message>

   <message name="openDoorResponse">
      <part name="parameters" element="ns:openDoorResponse"/>
   </message>

   <message name="openRelayRequest">
      <part name="parameters" element="ns:openRelay"/>
   </message>

   <message name="openRelayResponse">
      <part name="parameters" element="ns:openRelayResponse"/>
   </message>

   <message name="closeRelayRequest">
      <part name="parameters" element="ns:closeRelay"/>
   </message>

   <message name="closeRelayResponse">
      <part name="parameters" element="ns:closeRelayResponse"/>
   </message>

   <message name="registerAgentRequest">
      <part name="parameters" element="ns:registerAgent"/>
   </message>

   <message name="registerAgentResponse">
      <part name="parameters" element="ns:registerAgentResponse"/>
   </message>

   <message name="unregisterAgentRequest">
      <part name="parameters" element="ns:unregisterAgent"/>
   </message>

   <message name="unregisterAgentResponse">
      <part name="parameters" element="ns:unregisterAgentResponse"/>
   </message>

   <message name="getAPIVersionRequest">
      <part name="parameters" element="ns:getAPIVersion"/>
   </message>

   <message name="getAPIVersionResponse">
      <part name="parameters" element="ns:getAPIVersionResponse"/>
   </message>

   <message name="getTerminalStatusRequest">
      <part name="parameters" element="ns:getTerminalStatus"/>
   </message>

   <message name="getTerminalStatusResponse">
      <part name="parameters" element="ns:getTerminalStatusResponse"/>
   </message>

   <message name="getTerminalListRequest">
      <part name="parameters" element="ns:getTerminalList"/>
   </message>

   <message name="getTerminalListResponse">
      <part name="parameters" element="ns:getTerminalListResponse"/>
   </message>

   <message name="nopRequest">
      <part name="parameters" element="ns:nop"/>
   </message>

   <message name="nopResponse">
      <part name="parameters" element="ns:nopResponse"/>
   </message>

   <message name="getLogPhotoRequest">
      <part name="parameters" element="ns:getLogPhoto"/>
   </message>

   <message name="getLogPhotoResponse">
      <part name="parameters" element="ns:getLogPhotoResponse"/>
   </message>

   <message name="registerFPUser">
      <part name="parameters" element="ns:registerFPUser"/>
   </message>

   <message name="registerFPUserResponse">
      <part name="parameters" element="ns:registerFPUserResponse"/>
   </message>

   <message name="getFullLogsRequest">
      <part name="parameters" element="ns:getFullLogs"/>
   </message>

   <message name="getFullLogsResponse">
      <part name="parameters" element="ns:getFullLogsResponse"/>
   </message>

   <message name="resetLogRequest">
      <part name="parameters" element="ns:resetLog"/>
   </message>

   <message name="resetLogResponse">
      <part name="parameters" element="ns:resetLogResponse"/>
   </message>

   <message name="getFpSecurityLevelRequest">
      <part name="parameters" element="ns:getFpSecurityLevel"/>
   </message>

   <message name="getFpSecurityLevelResponse">
      <part name="parameters" element="ns:getFpSecurityLevelResponse"/>
   </message>

   <message name="setFpSecurityLevelRequest">
      <part name="parameters" element="ns:setFpSecurityLevel"/>
   </message>

   <message name="setFpSecurityLevelResponse">
      <part name="parameters" element="ns:setFpSecurityLevelResponse"/>
   </message>

   <message name="getRelayDelayRequest">
      <part name="parameters" element="ns:getRelayDelay"/>
   </message>

   <message name="getRelayDelayResponse">
      <part name="parameters" element="ns:getRelayDelayResponse"/>
   </message>

   <message name="setRelayDelayRequest">
      <part name="parameters" element="ns:setRelayDelay"/>
   </message>

   <message name="setRelayDelayResponse">
      <part name="parameters" element="ns:setRelayDelayResponse"/>
   </message>

   <message name="getAutoInOutRequest">
      <part name="parameters" element="ns:getAutoInOut"/>
   </message>

   <message name="getAutoInOutResponse">
      <part name="parameters" element="ns:getAutoInOutResponse"/>
   </message>

   <message name="setAutoInOutRequest">
      <part name="parameters" element="ns:setAutoInOut"/>
   </message>

   <message name="setAutoInOutResponse">
      <part name="parameters" element="ns:setAutoInOutResponse"/>
   </message>

   <message name="getLogUnauthorizedEventRequest">
      <part name="parameters" element="ns:getLogUnauthorizedEvent"/>
   </message>

   <message name="getLogUnauthorizedEventResponse">
      <part name="parameters" element="ns:getLogUnauthorizedEventResponse"/>
   </message>

   <message name="setLogUnauthorizedEventRequest">
      <part name="parameters" element="ns:setLogUnauthorizedEvent"/>
   </message>

   <message name="setLogUnauthorizedEventResponse">
      <part name="parameters" element="ns:setLogUnauthorizedEventResponse"/>
   </message>

   <message name="setRelayOptionRequest">
      <part name="parameters" element="ns:setRelayOption"/>
   </message>

   <message name="setRelayOptionResponse">
      <part name="parameters" element="ns:setRelayOptionResponse"/>
   </message>

   <message name="getRelayOptionRequest">
      <part name="parameters" element="ns:getRelayOption"/>
   </message>

   <message name="getRelayOptionResponse">
      <part name="parameters" element="ns:getRelayOptionResponse"/>
   </message>

   <message name="setSNTPRequest">
      <part name="parameters" element="ns:setSNTP"/>
   </message>

   <message name="setSNTPResponse">
      <part name="parameters" element="ns:setSNTPResponse"/>
   </message>

   <message name="getSNTPRequest">
      <part name="parameters" element="ns:getSNTP"/>
   </message>

   <message name="getSNTPResponse">
      <part name="parameters" element="ns:getSNTPResponse"/>
   </message>

   <message name="setSNTPServerRequest">
      <part name="parameters" element="ns:setSNTPServer"/>
   </message>

   <message name="setSNTPServerResponse">
      <part name="parameters" element="ns:setSNTPServerResponse"/>
   </message>

   <message name="getSNTPServerRequest">
      <part name="parameters" element="ns:getSNTPServer"/>
   </message>

   <message name="getSNTPServerResponse">
      <part name="parameters" element="ns:getSNTPServerResponse"/>
   </message>

   <message name="getTerminalDateTimeRequest">
      <part name="parameters" element="ns:getTerminalDateTime"/>
   </message>

   <message name="getTerminalDateTimeResponse">
      <part name="parameters" element="ns:getTerminalDateTimeResponse"/>
   </message>

   <message name="setTerminalDateTimeRequest">
      <part name="parameters" element="ns:setTerminalDateTime"/>
   </message>

   <message name="setTerminalDateTimeResponse">
      <part name="parameters" element="ns:setTerminalDateTimeResponse"/>
   </message>

   <message name="getTimeZoneRequest">
      <part name="parameters" element="ns:getTimeZone"/>
   </message>

   <message name="getTimeZoneResponse">
      <part name="parameters" element="ns:getTimeZoneResponse"/>
   </message>

   <message name="setTimeZoneRequest">
      <part name="parameters" element="ns:setTimeZone"/>
   </message>

   <message name="setTimeZoneResponse">
      <part name="parameters" element="ns:setTimeZoneResponse"/>
   </message>

   <message name="getCaptureFingerprintRequest">
      <part name="parameters" element="ns:getCaptureFingerprint"/>
   </message>

   <message name="getCaptureFingerprintResponse">
      <part name="parameters" element="ns:getCaptureFingerprintResponse"/>
   </message>

   <message name="initCaptureFP">
      <part name="parameters" element="ns:initCaptureFP"/>
   </message>

   <message name="initCaptureFPResponse">
      <part name="parameters" element="ns:initCaptureFPResponse"/>
   </message>

   <message name="lockRequest">
      <part name="parameters" element="ns:lock"/>
   </message>

   <message name="lockResponse">
      <part name="parameters" element="ns:lockResponse"/>
   </message>

   <message name="unlockRequest">
      <part name="parameters" element="ns:unlock"/>
   </message>

   <message name="unlockResponse">
      <part name="parameters" element="ns:unlockResponse"/>
   </message>

   <message name="systemBackupRequest">
      <part name="parameters" element="ns:systemBackup"/>
   </message>

   <message name="systemBackupResponse">
      <part name="parameters" element="ns:systemBackupResponse"/>
   </message>

   <message name="systemRestoreRequest">
      <part name="parameters" element="ns:systemRestore"/>
   </message>

   <message name="systemRestoreResponse">
      <part name="parameters" element="ns:systemRestoreResponse"/>
   </message>

   <message name="getUsersDbRequest">
      <part name="parameters" element="ns:getUsersDb"/>
   </message>

   <message name="getUsersDbResponse">
      <part name="parameters" element="ns:getUsersDbResponse"/>
   </message>

   <message name="deleteLogsRequest">
      <part name="parameters" element="ns:deleteLogs"/>
   </message>

   <message name="deleteLogsResponse">
      <part name="parameters" element="ns:deleteLogsResponse"/>
   </message>

   <portType name="ACTAtekPortType">
      <operation name="login">
         <documentation>Return sessionID for subsequent calls</documentation>
         <input message="tns:loginRequest"/>
         <output message="tns:loginResponse"/>
      </operation>
      <operation name="logout">
         <documentation>Invalidate the given sessionID</documentation>
         <input message="tns:logoutRequest"/>
         <output message="tns:logoutResponse"/>
      </operation>
      <operation name="getRegisteredAgents">
         <documentation>Get Agent List</documentation>
         <input message="tns:getRegisteredAgentsRequest"/>
         <output message="tns:getRegisteredAgentsResponse"/>
      </operation>
      <operation name="pollLog">
         <documentation>Actively Send Log to Agent, return agent status when done</documentation>
         <input message="tns:pollLogRequest"/>
         <output message="tns:pollLogResponse"/>
      </operation>
      <operation name="getLogs">
         <documentation>Service definition of function ns__getLogs</documentation>
         <input message="tns:getLogsRequest"/>
         <output message="tns:getLogsResponse"/>
      </operation>
      <operation name="addLog">
         <documentation>Add a Log Entry</documentation>
         <input message="tns:addLogRequest"/>
         <output message="tns:addLogResponse"/>
      </operation>
      <operation name="addUser">
         <documentation>Add a User</documentation>
         <input message="tns:addUserRequest"/>
         <output message="tns:addUserResponse"/>
      </operation>
      <operation name="getUsers">
         <documentation>Find Users</documentation>
         <input message="tns:getUsersRequest"/>
         <output message="tns:getUsersResponse"/>
      </operation>
      <operation name="updateUser">
         <documentation>Change User Information</documentation>
         <input message="tns:updateUserRequest"/>
         <output message="tns:updateUserResponse"/>
      </operation>
      <operation name="deleteUser">
         <documentation>Delete a given User</documentation>
         <input message="tns:deleteUserRequest"/>
         <output message="tns:deleteUserResponse"/>
      </operation>
      <operation name="getMyself">
         <documentation>Get current login User</documentation>
         <input message="tns:getMyselfRequest"/>
         <output message="tns:getMyselfResponse"/>
      </operation>
      <operation name="updateMyself">
         <documentation>Update own information</documentation>
         <input message="tns:updateMyselfRequest"/>
         <output message="tns:updateMyselfResponse"/>
      </operation>
      <operation name="activateUser">
         <documentation>Activate a User</documentation>
         <input message="tns:activateUserRequest"/>
         <output message="tns:activateUserResponse"/>
      </operation>
      <operation name="deactivateUser">
         <documentation>Deactivate a User</documentation>
         <input message="tns:deactivateUserRequest"/>
         <output message="tns:deactivateUserResponse"/>
      </operation>
      <operation name="getUserMessage">
         <documentation>Get User Message</documentation>
         <input message="tns:getUserMessageRequest"/>
         <output message="tns:getUserMessageResponse"/>
      </operation>
      <operation name="updateUserMessage">
         <documentation>Change User Message</documentation>
         <input message="tns:updateUserMessageRequest"/>
         <output message="tns:updateUserMessageResponse"/>
      </operation>
      <operation name="deleteUserMessage">
         <documentation>Delete User Message</documentation>
         <input message="tns:deleteUserMessageRequest"/>
         <output message="tns:deleteUserMessageResponse"/>
      </operation>
      <operation name="addDepartment">
         <documentation>Add a Department</documentation>
         <input message="tns:addDepartmentRequest"/>
         <output message="tns:addDepartmentResponse"/>
      </operation>
      <operation name="updateDepartment">
         <documentation>Change Department Information</documentation>
         <input message="tns:updateDepartmentRequest"/>
         <output message="tns:updateDepartmentResponse"/>
      </operation>
      <operation name="getDepartments">
         <documentation>Get Departments by ID</documentation>
         <input message="tns:getDepartmentsRequest"/>
         <output message="tns:getDepartmentsResponse"/>
      </operation>
      <operation name="deleteDepartment">
         <documentation>Delete Department</documentation>
         <input message="tns:deleteDepartmentRequest"/>
         <output message="tns:deleteDepartmentResponse"/>
      </operation>
      <operation name="addGroup">
         <documentation>Add an Access Group</documentation>
         <input message="tns:addGroupRequest"/>
         <output message="tns:addGroupResponse"/>
      </operation>
      <operation name="getGroups">
         <documentation>Service definition of function ns__getGroups</documentation>
         <input message="tns:getGroupsRequest"/>
         <output message="tns:getGroupsResponse"/>
      </operation>
      <operation name="updateGroup">
         <documentation>Change Group Information</documentation>
         <input message="tns:updateGroupRequest"/>
         <output message="tns:updateGroupResponse"/>
      </operation>
      <operation name="deleteGroup">
         <documentation>Delete a given Group</documentation>
         <input message="tns:deleteGroupRequest"/>
         <output message="tns:deleteGroupResponse"/>
      </operation>
      <operation name="getTriggers">
         <documentation>Get Trigger by Type</documentation>
         <input message="tns:getTriggersRequest"/>
         <output message="tns:getTriggersResponse"/>
      </operation>
      <operation name="updateTrigger">
         <documentation>Change Trigger Details </documentation>
         <input message="tns:updateTriggerRequest"/>
         <output message="tns:updateTriggerResponse"/>
      </operation>
      <operation name="clearTrigger">
         <documentation>Clear All Trigger Time</documentation>
         <input message="tns:clearTriggerRequest"/>
         <output message="tns:clearTriggerResponse"/>
      </operation>
      <operation name="openDoor">
         <documentation>Open the Door Now</documentation>
         <input message="tns:openDoorRequest"/>
         <output message="tns:openDoorResponse"/>
      </operation>
      <operation name="openRelay">
         <documentation>Open the Relay</documentation>
         <input message="tns:openRelayRequest"/>
         <output message="tns:openRelayResponse"/>
      </operation>
      <operation name="closeRelay">
         <documentation>Close the Relay</documentation>
         <input message="tns:closeRelayRequest"/>
         <output message="tns:closeRelayResponse"/>
      </operation>
      <operation name="registerAgent">
         <documentation>Register an Agent (IP/PORT)</documentation>
         <input message="tns:registerAgentRequest"/>
         <output message="tns:registerAgentResponse"/>
      </operation>
      <operation name="unregisterAgent">
         <documentation>Delete Agent (IP/PORT)</documentation>
         <input message="tns:unregisterAgentRequest"/>
         <output message="tns:unregisterAgentResponse"/>
      </operation>
      <operation name="getAPIVersion">
         <documentation>Get API Version Number</documentation>
         <input message="tns:getAPIVersionRequest"/>
         <output message="tns:getAPIVersionResponse"/>
      </operation>
      <operation name="getTerminalStatus">
         <documentation>Get Terminal Status</documentation>
         <input message="tns:getTerminalStatusRequest"/>
         <output message="tns:getTerminalStatusResponse"/>
      </operation>
      <operation name="getTerminalList">
         <documentation>Service definition of function ns__getTerminalList</documentation>
         <input message="tns:getTerminalListRequest"/>
         <output message="tns:getTerminalListResponse"/>
      </operation>
      <operation name="nop">
         <documentation>Check if the session still valid and update timestamp of sessionID</documentation>
         <input message="tns:nopRequest"/>
         <output message="tns:nopResponse"/>
      </operation>
      <operation name="getLogPhoto">
         <documentation>Get Photo of the related log parameter</documentation>
         <input message="tns:getLogPhotoRequest"/>
         <output message="tns:getLogPhotoResponse"/>
      </operation>
      <operation name="registerFPUser">
         <documentation>Immediately Register a Fingerprint User using ACTAtek</documentation>
         <input message="tns:registerFPUser"/>
         <output message="tns:registerFPUserResponse"/>
      </operation>
      <operation name="getFullLogs">
         <documentation>Service definition of function ns__getFullLogs</documentation>
         <input message="tns:getFullLogsRequest"/>
         <output message="tns:getFullLogsResponse"/>
      </operation>
      <operation name="resetLog">
         <documentation>Service definition of function ns__resetLog</documentation>
         <input message="tns:resetLogRequest"/>
         <output message="tns:resetLogResponse"/>
      </operation>
      <operation name="getFpSecurityLevel">
         <documentation>Service definition of function ns__getFpSecurityLevel</documentation>
         <input message="tns:getFpSecurityLevelRequest"/>
         <output message="tns:getFpSecurityLevelResponse"/>
      </operation>
      <operation name="setFpSecurityLevel">
         <documentation>Service definition of function ns__setFpSecurityLevel</documentation>
         <input message="tns:setFpSecurityLevelRequest"/>
         <output message="tns:setFpSecurityLevelResponse"/>
      </operation>
      <operation name="getRelayDelay">
         <documentation>Service definition of function ns__getRelayDelay</documentation>
         <input message="tns:getRelayDelayRequest"/>
         <output message="tns:getRelayDelayResponse"/>
      </operation>
      <operation name="setRelayDelay">
         <documentation>Service definition of function ns__setRelayDelay</documentation>
         <input message="tns:setRelayDelayRequest"/>
         <output message="tns:setRelayDelayResponse"/>
      </operation>
      <operation name="getAutoInOut">
         <documentation>Service definition of function ns__getAutoInOut</documentation>
         <input message="tns:getAutoInOutRequest"/>
         <output message="tns:getAutoInOutResponse"/>
      </operation>
      <operation name="setAutoInOut">
         <documentation>Service definition of function ns__setAutoInOut</documentation>
         <input message="tns:setAutoInOutRequest"/>
         <output message="tns:setAutoInOutResponse"/>
      </operation>
      <operation name="getLogUnauthorizedEvent">
         <documentation>Service definition of function ns__getLogUnauthorizedEvent</documentation>
         <input message="tns:getLogUnauthorizedEventRequest"/>
         <output message="tns:getLogUnauthorizedEventResponse"/>
      </operation>
      <operation name="setLogUnauthorizedEvent">
         <documentation>Service definition of function ns__setLogUnauthorizedEvent</documentation>
         <input message="tns:setLogUnauthorizedEventRequest"/>
         <output message="tns:setLogUnauthorizedEventResponse"/>
      </operation>
      <operation name="setRelayOption">
         <documentation>Service definition of function ns__setRelayOption</documentation>
         <input message="tns:setRelayOptionRequest"/>
         <output message="tns:setRelayOptionResponse"/>
      </operation>
      <operation name="getRelayOption">
         <documentation>Service definition of function ns__getRelayOption</documentation>
         <input message="tns:getRelayOptionRequest"/>
         <output message="tns:getRelayOptionResponse"/>
      </operation>
      <operation name="setSNTP">
         <documentation>Service definition of function ns__setSNTP</documentation>
         <input message="tns:setSNTPRequest"/>
         <output message="tns:setSNTPResponse"/>
      </operation>
      <operation name="getSNTP">
         <documentation>Service definition of function ns__getSNTP</documentation>
         <input message="tns:getSNTPRequest"/>
         <output message="tns:getSNTPResponse"/>
      </operation>
      <operation name="setSNTPServer">
         <documentation>Service definition of function ns__setSNTPServer</documentation>
         <input message="tns:setSNTPServerRequest"/>
         <output message="tns:setSNTPServerResponse"/>
      </operation>
      <operation name="getSNTPServer">
         <documentation>Service definition of function ns__getSNTPServer</documentation>
         <input message="tns:getSNTPServerRequest"/>
         <output message="tns:getSNTPServerResponse"/>
      </operation>
      <operation name="getTerminalDateTime">
         <documentation>Service definition of function ns__getTerminalDateTime</documentation>
         <input message="tns:getTerminalDateTimeRequest"/>
         <output message="tns:getTerminalDateTimeResponse"/>
      </operation>
      <operation name="setTerminalDateTime">
         <documentation>Service definition of function ns__setTerminalDateTime</documentation>
         <input message="tns:setTerminalDateTimeRequest"/>
         <output message="tns:setTerminalDateTimeResponse"/>
      </operation>
      <operation name="getTimeZone">
         <documentation>Service definition of function ns__getTimeZone</documentation>
         <input message="tns:getTimeZoneRequest"/>
         <output message="tns:getTimeZoneResponse"/>
      </operation>
      <operation name="setTimeZone">
         <documentation>Service definition of function ns__setTimeZone</documentation>
         <input message="tns:setTimeZoneRequest"/>
         <output message="tns:setTimeZoneResponse"/>
      </operation>
      <operation name="getCaptureFingerprint">
         <documentation>Service definition of function ns__getCaptureFingerprint</documentation>
         <input message="tns:getCaptureFingerprintRequest"/>
         <output message="tns:getCaptureFingerprintResponse"/>
      </operation>
      <operation name="initCaptureFP">
         <documentation>Service definition of function ns__initCaptureFP</documentation>
         <input message="tns:initCaptureFP"/>
         <output message="tns:initCaptureFPResponse"/>
      </operation>
      <operation name="lock">
         <documentation>Service definition of function ns__lock</documentation>
         <input message="tns:lockRequest"/>
         <output message="tns:lockResponse"/>
      </operation>
      <operation name="unlock">
         <documentation>Service definition of function ns__unlock</documentation>
         <input message="tns:unlockRequest"/>
         <output message="tns:unlockResponse"/>
      </operation>
      <operation name="systemBackup">
         <documentation>Service definition of function ns__systemBackup</documentation>
         <input message="tns:systemBackupRequest"/>
         <output message="tns:systemBackupResponse"/>
      </operation>
      <operation name="systemRestore">
         <documentation>Service definition of function ns__systemRestore</documentation>
         <input message="tns:systemRestoreRequest"/>
         <output message="tns:systemRestoreResponse"/>
      </operation>
      <operation name="getUsersDb">
         <documentation>Service definition of function ns__getUsersDb</documentation>
         <input message="tns:getUsersDbRequest"/>
         <output message="tns:getUsersDbResponse"/>
      </operation>
      <operation name="deleteLogs">
         <documentation>Service definition of function ns__deleteLogs</documentation>
         <input message="tns:deleteLogsRequest"/>
         <output message="tns:deleteLogsResponse"/>
      </operation>
   </portType>

   <binding name="ACTAtek" type="tns:ACTAtekPortType">
      <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="login">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="logout">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getRegisteredAgents">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="pollLog">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getLogs">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="addLog">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="addUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getUsers">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deleteUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getMyself">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateMyself">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="activateUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deactivateUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getUserMessage">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateUserMessage">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deleteUserMessage">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="addDepartment">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateDepartment">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getDepartments">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deleteDepartment">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="addGroup">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getGroups">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateGroup">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deleteGroup">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getTriggers">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="updateTrigger">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="clearTrigger">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="openDoor">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="openRelay">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="closeRelay">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="registerAgent">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="unregisterAgent">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getAPIVersion">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getTerminalStatus">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getTerminalList">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="nop">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getLogPhoto">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="registerFPUser">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getFullLogs">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="resetLog">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getFpSecurityLevel">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setFpSecurityLevel">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getRelayDelay">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setRelayDelay">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getAutoInOut">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setAutoInOut">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getLogUnauthorizedEvent">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setLogUnauthorizedEvent">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setRelayOption">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getRelayOption">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setSNTP">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getSNTP">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setSNTPServer">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getSNTPServer">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getTerminalDateTime">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setTerminalDateTime">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getTimeZone">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="setTimeZone">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getCaptureFingerprint">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="initCaptureFP">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="lock">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="unlock">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="systemBackup">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="systemRestore">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="getUsersDb">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
      <operation name="deleteLogs">
         <SOAP:operation soapAction=""/>
         <input>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </input>
         <output>
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <SOAP:body use="literal"/>
         </output>
      </operation>
   </binding>

   <service name="ACTAtek">
      <documentation>WebService API for ACTAtek</documentation>
      <port name="ACTAtek" binding="tns:ACTAtek">
         <SOAP:address location="http://ws.soatrader.com/hectrix.com/0.1/ACTAtek"/>
      </port>
   </service>

</definitions>