<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://ejbf.ds.com" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:impl="http://ejbf.ds.com" xmlns:intf="http://ejbf.ds.com" xmlns:tns2="http://ejbr.ds.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsi="http://ws-i.org/profiles/basic/1.1/xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema targetNamespace="http://ejbf.ds.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns2="http://ejbr.ds.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://ejbr.ds.com"/>
      <element name="jobFinalizeResponse">
        <complexType>
          <sequence>
            <element name="jobFinalizeReturn" nillable="true" type="xsd:string">
              <annotation>
                <documentation>Should be &quot;Job Finalized&quot; on success</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="validate">
        <complexType>
          <sequence>
            <element name="jobnumber" nillable="true" type="xsd:long">
              <annotation>
                <documentation>Listpk of the list the addresses belong to</documentation>
              </annotation>
            </element>
            <element name="postalInputRecordArray" nillable="true" type="impl:ArrayOf_tns2_nillable_WsPostalinputRecord">
              <annotation>
                <documentation>Up to 10 addresses to validate</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="validateResponse">
        <complexType>
          <sequence>
            <element name="validateReturn" nillable="true" type="impl:ArrayOf_tns2_nillable_WsPostaloutputRecord">
              <annotation>
                <documentation>Address validation results</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="jobInitialize">
        <complexType>
          <sequence>
            <element name="customerpk" nillable="true" type="xsd:long">
              <annotation>
                <documentation>Required. The primary key representing the customer for which to create a new list.</documentation>
              </annotation>
            </element>
            <element name="custaddrpk" nillable="true" type="xsd:long">
              <annotation>
                <documentation>The primary key representing the address of the customer that owns this list</documentation>
              </annotation>
            </element>
            <element name="listname" nillable="true" type="xsd:string">
              <annotation>
                <documentation>Name of the list</documentation>
              </annotation>
            </element>
            <element name="listdate" nillable="true" type="xsd:string">
              <annotation>
                <documentation>Date representing the fileversion for this list</documentation>
              </annotation>
            </element>
            <element name="filename" nillable="true" type="xsd:string">
              <annotation>
                <documentation>Filename for the list</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="jobInitializeResponse">
        <complexType>
          <sequence>
            <element name="jobInitializeReturn" nillable="true" type="xsd:long">
              <annotation>
                <documentation>List&apos;s primary key</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="validateInteractive">
        <complexType>
          <sequence>
            <element name="rec" nillable="true" type="tns2:WsPostalinputRecord"/>
          </sequence>
        </complexType>
      </element>
      <element name="validateInteractiveResponse">
        <complexType>
          <sequence>
            <element name="validateInteractiveReturn" nillable="true" type="tns2:WsPostaloutputRecord"/>
          </sequence>
        </complexType>
      </element>
      <element name="jobFinalize">
        <complexType>
          <sequence>
            <element name="jobnumber" nillable="true" type="xsd:long">
              <annotation>
                <documentation>Listpk for the list to finalize</documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="Timestamp">
        <complexType>
          <sequence>
            <element name="Created" nillable="false" type="xsd:dateTime"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="ArrayOf_tns2_nillable_WsPostalinputRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsPostalinputRecord"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsPostaloutputRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsPostaloutputRecord"/>
        </sequence>
      </complexType>
    </schema>
    <schema targetNamespace="http://ejbr.ds.com" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://ejbf.ds.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <complexType name="WsPostalinputRecord">
        <complexContent>
          <extension base="tns2:WsDsRecord">
            <sequence>
              <element minOccurs="0" name="firmorrecipientinput" nillable="true">
                <simpleType>
                  <annotation>
                    <documentation>Name of the company, building, apt. complex, shopping center, or other entity. MaxLength: 64</documentation>
                  </annotation>
                  <restriction base="xsd:string">
                    <maxLength value="64"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="firmorrecipientinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="deliveryaddressline1Input" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Primary address line. Required. MaxLength: 95.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="95"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="deliveryaddressline2Input" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Secondary address line. MaxLength: 64.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="64"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="lastlineinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Last line in one string, either all components or none. MaxLength: 42.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="42"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="foreignid" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    &lt;p&gt;
                      This is an id which can be provided by you. If foreignid is non-null, it will update the record with a matching foreignid if one exists. Otherwise, the record is considered new and will be created. If foreignid is
                      not populated, a unique id will be generated and the record will be created. Foreignid&apos;s must be unique within a list.
                    &lt;/p&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="mode" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    &lt;p&gt;
                      If you are doing an interactive call you should set this to &quot;Interactive&quot; to get all of the hint data back.
                    &lt;/p&gt;
                    &lt;p&gt;
                      Hint data will sometimes give lists of city names, secondary information, and other address related information when an address could not be confirmed.
                    &lt;/p&gt;
                    &lt;p&gt;
                      This makes it easier for a user to correct keying or spelling errors.
                    &lt;/p&gt;                    
                  </xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="originalfirmname" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="originallastline" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="originaldeliveryline" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addressmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="deliveryaddressline1Inputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="originaldeliveryline2" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="urbanizationinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="listpk" nillable="true" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>This is the primary key to a list in which to place this record. You can update existing records in a list by populating listdetailpk or foreignid with listpk.</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addressinputparsedyn" nillable="true" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>Set to true if you are providing the parsed address inputs.</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addressinputparsedynmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="addressprimarynumberinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addressprimarynumberinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="addresssecondaryabbrinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addresssecondaryabbrinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="addresssecondarynumberinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="addresssecondarynumberinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="citynameinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Name of the city. MaxLength: 28.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="28"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="citynameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="departmentinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="departmentinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="firstnameinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>First name. MaxLength: 30. If providing name parsed (first, middle, last)... set nameinputparsedyn to true.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="30"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="firstnameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="functionaltitleinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="functionaltitleinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="lastlineinputparsedyn" nillable="true" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>Set to true if you are providing the last line inputs parsed.</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="lastlineinputparsedynmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="lastnameinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Last name. MaxLength: 30. If providing name parsed (first, middle, last)... set nameinputparsedyn to true.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="30"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="lastnameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="mailstopcodeinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation/>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="64"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="mailstopcodeinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="middlenameinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Middle name. MaxLength: 30. If providing name parsed (first, middle, last)... set nameinputparsedyn to true.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="30"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="middlenameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="nameinputparsedyn" nillable="true" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation>Set to true if supplying the name parsed</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="nameinputparsedynmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="prefixtitleinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>The addresse&apos;s name prefix. Ex. prefixtitleinput is &quot;Dr.&quot; for &quot;Dr. John Doe&quot;</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="12"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="prefixtitleinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="professionaltitleinput" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="professionaltitleinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="statecodeinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>2 character state code. Ex. &quot;TX&quot;. MaxLength: 2.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="2"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="statecodeinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="streetnameinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="streetnameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="streetpostdirectionalabbrinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="streetpostdirectionalabbrinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="streetpredirectionalabbrinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="streetpredirectionalabbrinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="streetsuffixabbrinput" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="streetsuffixabbrinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="suffixtitleinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>The addressee&apos;s suffix that should appear at the end of the name. Ex. suffixtitleinput is &quot;III&quot; for &quot;John Doe III&quot;</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="6"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="suffixtitleinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="unparsednameinput" nillable="true">
                <simpleType>
                  <annotation>
                    <documentation>Name goes here when it is not already parsed. MaxLength: 66</documentation>
                  </annotation>
                  <restriction base="xsd:string">
                    <maxLength value="66"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="unparsednameinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="zip4Addoninput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>4 digit ZIP+4 add on. MaxLength: 4.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="4"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="zip4Addoninputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="zipcodeinput" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>5 digit ZIP code. MaxLength: 5.</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="5"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="zipcodeinputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="0" name="deliveryaddressline2Inputmsg" nillable="true" type="xsd:string"/>
              <element minOccurs="1" name="customerpk" nillable="false" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>Required. This must be the primary key of a customer for which the calling user (your application) has access to, and this address belongs to.</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="listdetailpk" nillable="true" type="xsd:long">
                <xsd:annotation>
                  <xsd:documentation>The primary key of the ListdetailRecord this record corresponds to.</xsd:documentation>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="actioncode" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="originatingcallbackurl" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="processicamefrom" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation/>
                </xsd:annotation>
              </element>
              <element minOccurs="0" name="userdata" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata2" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata3" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata4" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata5" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata6" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata7" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="userdata8" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Userdata through Userdata8 are available for the end-user or integration developer to store custom data</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="255"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="phone" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Phone number for the addressee</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="20"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="email" nillable="true">
                <simpleType>
                  <xsd:annotation>
                    <xsd:documentation>Email for the addressee</xsd:documentation>
                  </xsd:annotation>
                  <restriction base="xsd:string">
                    <maxLength value="64"/>
                  </restriction>
                </simpleType>
              </element>
              <element minOccurs="0" name="updateinputs" nillable="false" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    &lt;p&gt;
                      Set to true if the input fields should be updated in the database if the record already exists. A record exists if either its listdetailpk or both listpk and foreignid are found in the database.
                    &lt;/p&gt;
                    &lt;p&gt;
                      If this is false, the record will not be changed. The default is true if this field is not included in the request.
                    &lt;/p&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WsDsRecord">
        <sequence>
          <element minOccurs="0" name="locale" nillable="true" type="xsd:string"/>
          <element minOccurs="0" name="errorlevel" nillable="true" type="xsd:int"/>
          <element minOccurs="0" name="active" nillable="true" type="xsd:boolean"/>
          <element minOccurs="0" name="activemsg" nillable="true" type="xsd:string"/>
          <element minOccurs="0" name="createuserpk" nillable="true" type="xsd:long"/>
          <element minOccurs="0" name="createuserpkmsg" nillable="true" type="xsd:string"/>
          <element name="error" type="xsd:boolean">
            <annotation>
              <documentation>Set to true when this record has an error. See errormsg.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="errormsg" nillable="true" type="xsd:string">
            <annotation>
              <documentation>Details regarding an error.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element minOccurs="0" name="modifyuserpkmsg" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="WsPostaloutputRecord">
        <annotation>
          <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
            &lt;p&gt;
              DPV Confirmation Indicators This record has the following fields: dpvconfirmind, dpvfootnote1, dpvfootnoe2, and dpvfootnote3
            &lt;/p&gt;
            &lt;p&gt;
              If you need to use these fields, here is a table of their possible values and suggested action.
            &lt;/p&gt;
            &lt;table&gt;
              &lt;tr&gt;
                &lt;th&gt;Indicator&lt;/th&gt;
                &lt;th&gt;Footnotes&lt;/th&gt;
                &lt;th&gt;Suggestion&lt;/th&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;N&lt;/td&gt;
                &lt;td&gt;AA&lt;/td&gt;
                &lt;td&gt;Verify the address.  Validated on the engine but could not be validated in the DPV process&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA BB&lt;/td&gt;
                &lt;td&gt;No action needed, validated to all components&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA RR&lt;/td&gt;
                &lt;td&gt;No action needed, address validated.  Found in CMRA table with PMB information present.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA R1&lt;/td&gt;
                &lt;td&gt;Validated.  Found in CMRA table with PMB information present.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA F1&lt;/td&gt;
                &lt;td&gt;No action needed.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA G1&lt;/td&gt;
                &lt;td&gt;No action needed.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;Y&lt;/td&gt;
                &lt;td&gt;AA U1&lt;/td&gt;
                &lt;td&gt;No action needed.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;S&lt;/td&gt;
                &lt;td&gt;AA CC&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is present but cannot be confirmed in the DPV process&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;S&lt;/td&gt;
                &lt;td&gt;AA P3&lt;/td&gt;
                &lt;td&gt;Verify the box number, could not be confirmed. It is present for this PO Box, RR, or HC address but cannot be confirmed in the DPV process&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;S&lt;/td&gt;
                &lt;td&gt;AA CC RR&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is present but cannot be confirmed in the DPV process.  It has been found in the CMRA table without PMB information.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;S&lt;/td&gt;
                &lt;td&gt;AA CC R1&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is present but cannot be confirmed in the DPV process.  It has been found in the CMRA table with PMB information.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;D&lt;/td&gt;
                &lt;td&gt;AA P1&lt;/td&gt;
                &lt;td&gt;Verify the box number, it is not present for this PO Box, RR, or HC address but needed to confirm.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;D&lt;/td&gt;
                &lt;td&gt;AA N1&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is not present.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;D&lt;/td&gt;
                &lt;td&gt;AA N1 RR&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is not present.  It has been found in the CMRA table with PMB information present.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;D&lt;/td&gt;
                &lt;td&gt;AA N1 R1&lt;/td&gt;
                &lt;td&gt;Verify secondary information. It is not present, it has been found in the CRMA table without PMB information and is not required for USPS.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;BLANK&lt;/td&gt;
                &lt;td&gt;A1 M1&lt;/td&gt;
                &lt;td&gt;Get correct address.  This address cannot be found in CASS engine.  It was not presented to the DPV process.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;BLANK&lt;/td&gt;
                &lt;td&gt;A1 M3&lt;/td&gt;
                &lt;td&gt;Get correct address.  This address cannot be found in CASS engine.  It was not presented to the DPV process.&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;BLANK&lt;/td&gt;
                &lt;td&gt;A1&lt;/td&gt;
                &lt;td&gt;Get correct address.  This address cannot be found in CASS engine.  It was not presented to the DPV process.&lt;/td&gt;
              &lt;/tr&gt;
            &lt;table&gt;         
          </xsd:documentation>
        </annotation>
        <complexContent>
          <extension base="tns2:WsPostalinputRecord">
            <sequence>
              <element name="allerrormessages" nillable="true" type="xsd:string">
                <annotation>
                  <xsd:documentation xmlns="http://www.w3.org/1999/xhtml">
                    &lt;p&gt;
                      All messages resulting from validation. There may be duplicate and/or null messages. Messages in this field do not signify an error unless error is true. When error is false, this field contains informational error
                      messages encountered during validation.
                    &lt;/p&gt;
                  </xsd:documentation>
                </annotation>
              </element>
              <element name="addressprimarynumberanswer" nillable="true" type="xsd:string"/>
              <element name="addressprimarynumberanswermsg" nillable="true" type="xsd:string"/>
              <element name="addressprimarynumbercoaanswer" nillable="true" type="xsd:string"/>
              <element name="addressprimarynumbercoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="addressprimaryoddevencode" nillable="true" type="xsd:string"/>
              <element name="addresssecondaryabbranswer" nillable="true" type="xsd:string"/>
              <element name="addresssecondaryabbranswermsg" nillable="true" type="xsd:string"/>
              <element name="addresssecondaryabbrcoaanswer" nillable="true" type="xsd:string"/>
              <element name="addresssecondaryabbrcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="addresssecondarynumberanswer" nillable="true" type="xsd:string"/>
              <element name="addresssecondarynumberanswermsg" nillable="true" type="xsd:string"/>
              <element name="addresssecondarynumcoaanswer" nillable="true" type="xsd:string"/>
              <element name="addresssecondarynumcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="addresssecondaryoddevencode" nillable="true" type="xsd:string"/>
              <element name="alphanumericprimarynum" type="xsd:boolean"/>
              <element name="alphanumericsecondarynum" type="xsd:boolean"/>
              <element name="approvedabbrsecunit" nillable="true" type="xsd:string"/>
              <element name="basealtcode" nillable="true" type="xsd:string"/>
              <element name="box" nillable="true" type="xsd:string"/>
              <element name="buildingtype" nillable="true" type="xsd:string"/>
              <element name="carrierroutecoaanswer" nillable="true" type="xsd:string"/>
              <element name="carrierroutecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="carrierrouteidanswer" nillable="true" type="xsd:string"/>
              <element name="carrierrouteidanswermsg" nillable="true" type="xsd:string"/>
              <element name="citymailingname" nillable="true" type="xsd:string"/>
              <element name="citynameanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Name of the city. MaxLength: 28.</documentation>
                </annotation>
              </element>
              <element name="citynameanswermsg" nillable="true" type="xsd:string"/>
              <element name="citynamecoaanswer" nillable="true" type="xsd:string"/>
              <element name="citynamecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="citystatemailingnameind" type="xsd:boolean"/>
              <element name="coafootnote" nillable="true" type="xsd:string"/>
              <element name="coafootnotemsg" nillable="true" type="xsd:string"/>
              <element name="coamatchrejected" nillable="true" type="xsd:boolean"/>
              <element name="coamatchrejectedmsg" nillable="true" type="xsd:string"/>
              <element name="congressionaldistrictnum" nillable="true" type="xsd:string"/>
              <element name="congressionaldistrictnummsg" nillable="true" type="xsd:string"/>
              <element name="countyname" nillable="true" type="xsd:string"/>
              <element name="countynamemsg" nillable="true" type="xsd:string"/>
              <element name="countynum" nillable="true" type="xsd:string"/>
              <element name="cridFlag" type="xsd:boolean"/>
              <element name="decimalof17Resultvalue" nillable="true" type="xsd:string"/>
              <element name="decimalof17Resultvaluemsg" nillable="true" type="xsd:string"/>
              <element name="defaultflagind" nillable="true" type="xsd:string"/>
              <element name="deliveryaddressline1Answer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Primary address line. MaxLength: 95.</documentation>
                </annotation>
              </element>
              <element name="deliveryaddressline1Answermsg" nillable="true" type="xsd:string"/>
              <element name="deliveryaddressline2Answer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Secondary address line. MaxLength: 64.</documentation>
                </annotation>
              </element>
              <element name="deliveryaddressline2Answermsg" nillable="true" type="xsd:string"/>
              <element name="deliveryline1Shortanswer" nillable="true" type="xsd:string"/>
              <element name="deliveryline2Shortanswer" nillable="true" type="xsd:string"/>
              <element name="deliverypointcheckdigitanswer" nillable="true" type="xsd:string"/>
              <element name="departmentanswer" nillable="true" type="xsd:string"/>
              <element name="dpbccoaanswer" nillable="true" type="xsd:string"/>
              <element name="dpbccoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="dpcanswer" nillable="true" type="xsd:string"/>
              <element name="dpcanswermsg" nillable="true" type="xsd:string"/>
              <element name="dpcFlag" type="xsd:boolean"/>
              <element name="dpvcmraind" nillable="true" type="xsd:string"/>
              <element name="dpvconfirmind" nillable="true" type="xsd:string"/>
              <element name="dpvfalsepositiveind" nillable="true" type="xsd:string"/>
              <element name="dpvfootnote1" nillable="true" type="xsd:string"/>
              <element name="dpvfootnote2" nillable="true" type="xsd:string"/>
              <element name="dpvfootnote3" nillable="true" type="xsd:string"/>
              <element name="dpvmsg" nillable="true" type="xsd:string"/>
              <element name="dropflagind" nillable="true" type="xsd:string"/>
              <element name="dropflagindmsg" nillable="true" type="xsd:string"/>
              <element name="dropnflagind" nillable="true" type="xsd:string"/>
              <element name="dropnflagindmsg" nillable="true" type="xsd:string"/>
              <element name="elotascdesanswer" nillable="true" type="xsd:string"/>
              <element name="elotsequencenumberanswer" nillable="true" type="xsd:string"/>
              <element name="ewsflag" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Early warning flag. It will indicate a &quot;Y&quot; if we intentionally did not code the address because the address is new and has not been finalized by the USPS.</documentation>
                </annotation>
              </element>
              <element name="financenum" nillable="true" type="xsd:string"/>
              <element name="firmorrecipientanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Name of the company, building, apt. complex, shopping center, or other entity. MaxLength: 64.</documentation>
                </annotation>
              </element>
              <element name="firmorrecipientanswermsg" nillable="true" type="xsd:string"/>
              <element name="firstnameanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>First name. MaxLength: 15.</documentation>
                </annotation>
              </element>
              <element name="firstnameanswermsg" nillable="true" type="xsd:string"/>
              <element name="firstnameof48Object" nillable="true" type="xsd:string"/>
              <element name="firstnameof48Objectmsg" nillable="true" type="xsd:string"/>
              <element name="foreigncountrynameanswer" nillable="true" type="xsd:string"/>
              <element name="foreigncountrynameanswermsg" nillable="true" type="xsd:string"/>
              <element name="foreignpostalcodeanswer" nillable="true" type="xsd:string"/>
              <element name="foreignpostalcodeanswermsg" nillable="true" type="xsd:string"/>
              <element name="functionaltitleanswer" nillable="true" type="xsd:string"/>
              <element name="gendercoaanswer" nillable="true" type="xsd:string"/>
              <element name="gendercoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="hexemdp" nillable="true" type="xsd:string"/>
              <element name="hexemdpmsg" nillable="true" type="xsd:string"/>
              <element name="hexofdataretrieved" nillable="true" type="xsd:string"/>
              <element name="hexofdataretrievedmsg" nillable="true" type="xsd:string"/>
              <element name="hexoffirst8Of48Object" nillable="true" type="xsd:string"/>
              <element name="hexoffirst8Of48Objectmsg" nillable="true" type="xsd:string"/>
              <element name="hexshaemdp" nillable="true" type="xsd:string"/>
              <element name="hexshaemdpmsg" nillable="true" type="xsd:string"/>
              <element name="hexshaof48Object" nillable="true" type="xsd:string"/>
              <element name="hexshaof48Objectmsg" nillable="true" type="xsd:string"/>
              <element name="highrisedefaultalternate" type="xsd:boolean"/>
              <element name="highrisedefaultFlag" type="xsd:boolean"/>
              <element name="highriseFlag" type="xsd:boolean"/>
              <element name="hintcoaanswer" nillable="true" type="xsd:string"/>
              <element name="hintcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="lacsfalsepositiveind" type="xsd:boolean"/>
              <element name="lacsFlag" type="xsd:boolean"/>
              <element name="lacslinkind" nillable="true" type="xsd:string"/>
              <element name="lacslinkreturncode" nillable="true" type="xsd:string"/>
              <element name="lacsstatus" nillable="true" type="xsd:string"/>
              <element name="lastlineanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Last line in one string (city, state, and zip). MaxLength: 42.</documentation>
                </annotation>
              </element>
              <element name="lastlineanswermsg" nillable="true" type="xsd:string"/>
              <element name="lastnameanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Last name. MaxLength: 15.</documentation>
                </annotation>
              </element>
              <element name="lastnameanswermsg" nillable="true" type="xsd:string"/>
              <element name="lastnameof48Object" nillable="true" type="xsd:string"/>
              <element name="lastnameof48Objectmsg" nillable="true" type="xsd:string"/>
              <element name="mailstopcodeanswer" nillable="true" type="xsd:string"/>
              <element name="middlenameanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Middle name. MaxLength: 15.</documentation>
                </annotation>
              </element>
              <element name="middlenameanswermsg" nillable="true" type="xsd:string"/>
              <element name="middlenamecoaanswer" nillable="true" type="xsd:string"/>
              <element name="middlenamecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="moveeffectivedatecoaanswer" nillable="true" type="xsd:string"/>
              <element name="moveeffectivedatecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="movetypeind" nillable="true" type="xsd:string"/>
              <element name="movetypeindmsg" nillable="true" type="xsd:string"/>
              <element name="nondeliverable" type="xsd:boolean"/>
              <element name="pmbanswer" nillable="true" type="xsd:string"/>
              <element name="pmbdesignatoranswer" nillable="true" type="xsd:string"/>
              <element name="pmbnumberanswer" nillable="true" type="xsd:string"/>
              <element name="poboxlowaddon" type="xsd:boolean"/>
              <element name="preferredlastlinecitystateid" nillable="true" type="xsd:string"/>
              <element name="prefixtitleanswer" nillable="true" type="xsd:string"/>
              <element name="prefixtitleanswermsg" nillable="true" type="xsd:string"/>
              <element name="professionaltitleanswer" nillable="true" type="xsd:string"/>
              <element name="rdi" nillable="true" type="xsd:string"/>
              <element name="recordtype" nillable="true" type="xsd:string"/>
              <element name="ruralroutedefaultFlag" type="xsd:boolean"/>
              <element name="ruralrouteFlag" type="xsd:boolean"/>
              <element name="secondaryabbr1" nillable="true" type="xsd:string"/>
              <element name="secondaryabbr2" nillable="true" type="xsd:string"/>
              <element name="secondarynumber1" nillable="true" type="xsd:string"/>
              <element name="secondarynumber2" nillable="true" type="xsd:string"/>
              <element name="standerdsecunit" nillable="true" type="xsd:string"/>
              <element name="statecodeanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>2 character state code. Ex. &quot;TX&quot;. MaxLength: 2.</documentation>
                </annotation>
              </element>
              <element name="statecodeanswermsg" nillable="true" type="xsd:string"/>
              <element name="statecodecoaanswer" nillable="true" type="xsd:string"/>
              <element name="statecodecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetnameabbr" nillable="true" type="xsd:string"/>
              <element name="streetnameanswer" nillable="true" type="xsd:string"/>
              <element name="streetnameanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetnamecoaanswer" nillable="true" type="xsd:string"/>
              <element name="streetnamecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetpostdirectionalabbranswer" nillable="true" type="xsd:string"/>
              <element name="streetpostdirectionalabbranswermsg" nillable="true" type="xsd:string"/>
              <element name="streetpostdirectionalcoaanswer" nillable="true" type="xsd:string"/>
              <element name="streetpostdirectionalcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetpredirectionalabbranswer" nillable="true" type="xsd:string"/>
              <element name="streetpredirectionalabbranswermsg" nillable="true" type="xsd:string"/>
              <element name="streetpredirectionalcoaanswer" nillable="true" type="xsd:string"/>
              <element name="streetpredirectionalcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetspellingvariation" type="xsd:boolean"/>
              <element name="streetsuffix" nillable="true" type="xsd:string"/>
              <element name="streetsuffixabbranswer" nillable="true" type="xsd:string"/>
              <element name="streetsuffixabbranswermsg" nillable="true" type="xsd:string"/>
              <element name="streetsuffixabbrcoaanswer" nillable="true" type="xsd:string"/>
              <element name="streetsuffixabbrcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="streetsuffixprimaryname" nillable="true" type="xsd:string"/>
              <element name="suffixnameof48Object" nillable="true" type="xsd:string"/>
              <element name="suffixnameof48Objectmsg" nillable="true" type="xsd:string"/>
              <element name="suffixtitleanswer" nillable="true" type="xsd:string"/>
              <element name="suffixtitleanswermsg" nillable="true" type="xsd:string"/>
              <element name="totalnumcoaqueries" nillable="true" type="xsd:int"/>
              <element name="totalnumcoaqueriesmsg" nillable="true" type="xsd:string"/>
              <element name="uniquezip" type="xsd:boolean"/>
              <element name="unparsednameanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>Name when it is not already parsed. MaxLength: 66.</documentation>
                </annotation>
              </element>
              <element name="urbanizationanswer" nillable="true" type="xsd:string"/>
              <element name="urbanizationcoaanswer" nillable="true" type="xsd:string"/>
              <element name="urbanizationcoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="zip4Addoncoaanswer" nillable="true" type="xsd:string"/>
              <element name="zip4Addoncoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="zipclasstype" nillable="true" type="xsd:string"/>
              <element name="zipcodeanswer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>5 digit ZIP code. MaxLength: 5.</documentation>
                </annotation>
              </element>
              <element name="zipcodeanswermsg" nillable="true" type="xsd:string"/>
              <element name="zipcodecoaanswer" nillable="true" type="xsd:string"/>
              <element name="zipcodecoaanswermsg" nillable="true" type="xsd:string"/>
              <element name="zipcodeFlag" type="xsd:boolean"/>
              <element name="zipplus4Answer" nillable="true" type="xsd:string">
                <annotation>
                  <documentation>4 digit ZIP+4 addon. MaxLength: 4.</documentation>
                </annotation>
              </element>
              <element name="zipplus4Flag" type="xsd:boolean"/>
              <element name="zipsector" nillable="true" type="xsd:string"/>
              <element name="zipsectorhighnum" nillable="true" type="xsd:string"/>
              <element name="zipsectorlownum" nillable="true" type="xsd:string"/>
              <element name="zipsectormsg" nillable="true" type="xsd:string"/>
              <element name="zipsegment" nillable="true" type="xsd:string"/>
              <element name="zipsegmenthighnum" nillable="true" type="xsd:string"/>
              <element name="zipsegmentlownum" nillable="true" type="xsd:string"/>
              <element name="zipsegmentmsg" nillable="true" type="xsd:string"/>
              <element name="zip4Records" nillable="true" type="tns2:ArrayOf_tns2_nillable_WsZip4Record">
                <annotation>
                  <documentation>Hint data.</documentation>
                </annotation>
              </element>
              <element name="cityStateRecords" nillable="true" type="tns2:ArrayOf_tns2_nillable_WsCitystateRecord">
                <annotation>
                  <documentation>Hint data.</documentation>
                </annotation>
              </element>
              <element name="stateRecords" nillable="true" type="tns2:ArrayOf_tns2_nillable_WsStateRecord">
                <annotation>
                  <documentation>Hint data.</documentation>
                </annotation>
              </element>
              <element name="stateCityRecords" nillable="true" type="tns2:ArrayOf_tns2_nillable_WsStatecityRecord">
                <annotation>
                  <documentation>Hint data.</documentation>
                </annotation>
              </element>
              <element name="stateCityStreetRecords" nillable="true" type="tns2:ArrayOf_tns2_nillable_WsStatecitystreetRecord">
                <annotation>
                  <documentation>Hint data.</documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="WsZip4Record">
        <sequence>
          <element name="actioncode" nillable="true" type="xsd:string"/>
          <element name="active" nillable="true" type="xsd:boolean"/>
          <element name="addressprimaryhighnum" nillable="true" type="xsd:string"/>
          <element name="addressprimarylownum" nillable="true" type="xsd:string"/>
          <element name="addressprimaryoddevencode" nillable="true" type="xsd:string"/>
          <element name="addresssecondaryabbr" nillable="true" type="xsd:string"/>
          <element name="addresssecondaryhighnum" nillable="true" type="xsd:string"/>
          <element name="addresssecondarylownum" nillable="true" type="xsd:string"/>
          <element name="addresssecondaryoddevencode" nillable="true" type="xsd:string"/>
          <element name="basealtcode" nillable="true" type="xsd:string"/>
          <element name="buildingorfirmname" nillable="true" type="xsd:string"/>
          <element name="carrierrouteid" nillable="true" type="xsd:string"/>
          <element name="congressionaldistrictnum" nillable="true" type="xsd:string"/>
          <element name="countynum" nillable="true" type="xsd:string"/>
          <element name="created" nillable="true" type="xsd:dateTime"/>
          <element name="createuserpk" nillable="true" type="xsd:long"/>
          <element name="createuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="financenum" nillable="true" type="xsd:string"/>
          <element name="firmhash" nillable="true" type="xsd:string"/>
          <element name="fullhash" nillable="true" type="xsd:long"/>
          <element name="govbldgtypeid" nillable="true" type="xsd:string"/>
          <element name="lacsstatus" nillable="true" type="xsd:string"/>
          <element name="modified" nillable="true" type="xsd:dateTime"/>
          <element name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element name="modifyuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="municipalitycitystateid" nillable="true" type="xsd:string"/>
          <element name="preferredlastlinecitystateid" nillable="true" type="xsd:string"/>
          <element name="recordtypeid" nillable="true" type="xsd:string"/>
          <element name="stateabbr" nillable="true" type="xsd:string"/>
          <element name="streetname" nillable="true" type="xsd:string"/>
          <element name="streetnamehash" nillable="true" type="xsd:string"/>
          <element name="streetpostdirectionalabbr" nillable="true" type="xsd:string"/>
          <element name="streetpredirectionalabbr" nillable="true" type="xsd:string"/>
          <element name="streetsuffixabbr" nillable="true" type="xsd:string"/>
          <element name="urbanizationcitystateid" nillable="true" type="xsd:string"/>
          <element name="zip4Highnum" nillable="true" type="xsd:string"/>
          <element name="zip4Id" nillable="true" type="xsd:string"/>
          <element name="zip4Lownum" nillable="true" type="xsd:string"/>
          <element name="zipcode" nillable="true" type="xsd:string"/>
          <element name="zipsectorhighnum" nillable="true" type="xsd:string"/>
          <element name="zipsectorlownum" nillable="true" type="xsd:string"/>
          <element name="zipsegmenthighnum" nillable="true" type="xsd:string"/>
          <element name="zipsegmentlownum" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="WsCitystateRecord">
        <sequence>
          <element name="active" nillable="true" type="xsd:boolean"/>
          <element name="citydeliveryyn" nillable="true" type="xsd:boolean"/>
          <element name="citystateid" nillable="true" type="xsd:string"/>
          <element name="citystatemailingnameyn" nillable="true" type="xsd:boolean"/>
          <element name="citystatename" nillable="true" type="xsd:string"/>
          <element name="citystatenameabbr" nillable="true" type="xsd:string"/>
          <element name="countyname" nillable="true" type="xsd:string"/>
          <element name="countynum" nillable="true" type="xsd:string"/>
          <element name="created" nillable="true" type="xsd:dateTime"/>
          <element name="createuserpk" nillable="true" type="xsd:long"/>
          <element name="createuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="facilitytypeid" nillable="true" type="xsd:string"/>
          <element name="facilitytypeiddesc" nillable="true" type="xsd:string"/>
          <element name="financenum" nillable="true" type="xsd:string"/>
          <element name="modified" nillable="true" type="xsd:dateTime"/>
          <element name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element name="modifyuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="preferredlastlinecitystateid" nillable="true" type="xsd:string"/>
          <element name="preferredlastlinecitystatename" nillable="true" type="xsd:string"/>
          <element name="ratetypeid" nillable="true" type="xsd:string"/>
          <element name="ratetypeiddesc" nillable="true" type="xsd:string"/>
          <element name="stateabbr" nillable="true" type="xsd:string"/>
          <element name="uniquezipnameyn" nillable="true" type="xsd:boolean"/>
          <element name="zipclasstypeid" nillable="true" type="xsd:string"/>
          <element name="zipclasstypeiddesc" nillable="true" type="xsd:string"/>
          <element name="zipcode" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="WsStateRecord">
        <sequence>
          <element name="active" nillable="true" type="xsd:boolean"/>
          <element name="created" nillable="true" type="xsd:dateTime"/>
          <element name="createuserpk" nillable="true" type="xsd:long"/>
          <element name="createuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="modified" nillable="true" type="xsd:dateTime"/>
          <element name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element name="modifyuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="name" nillable="true" type="xsd:string"/>
          <element name="stateid" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="WsStatecityRecord">
        <sequence>
          <element name="active" nillable="true" type="xsd:boolean"/>
          <element name="city" nillable="true" type="xsd:string"/>
          <element name="cityhash" nillable="true" type="xsd:string"/>
          <element name="created" nillable="true" type="xsd:dateTime"/>
          <element name="createuserpk" nillable="true" type="xsd:long"/>
          <element name="createuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="modified" nillable="true" type="xsd:dateTime"/>
          <element name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element name="modifyuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="state" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="WsStatecitystreetRecord">
        <sequence>
          <element name="active" nillable="true" type="xsd:boolean"/>
          <element name="city" nillable="true" type="xsd:string"/>
          <element name="created" nillable="true" type="xsd:dateTime"/>
          <element name="createuserpk" nillable="true" type="xsd:long"/>
          <element name="createuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="modified" nillable="true" type="xsd:dateTime"/>
          <element name="modifyuserpk" nillable="true" type="xsd:long"/>
          <element name="modifyuserpkdesc" nillable="true" type="xsd:string"/>
          <element name="state" nillable="true" type="xsd:string"/>
          <element name="statecitystreetpk" nillable="true" type="xsd:long"/>
          <element name="streetname" nillable="true" type="xsd:string"/>
          <element name="streetnamehash" nillable="true" type="xsd:string"/>
          <element name="streetpostdirectional" nillable="true" type="xsd:string"/>
          <element name="streetpredirectional" nillable="true" type="xsd:string"/>
          <element name="streetsuffix" nillable="true" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsZip4Record">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsZip4Record"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsCitystateRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsCitystateRecord"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsStateRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsStateRecord"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsStatecityRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsStatecityRecord"/>
        </sequence>
      </complexType>
      <complexType name="ArrayOf_tns2_nillable_WsStatecitystreetRecord">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns2:WsStatecitystreetRecord"/>
        </sequence>
      </complexType>      
    </schema>
  </wsdl:types>
  <wsdl:message name="jobFinalizeRequest">
    <wsdl:part element="intf:jobFinalize" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="validateResponse">
    <wsdl:part element="intf:validateResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="jobFinalizeResponse">
    <wsdl:part element="intf:jobFinalizeResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="validateInteractiveRequest">
    <wsdl:part element="intf:validateInteractive" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="validateRequest">
    <wsdl:part element="intf:validate" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="jobInitializeRequest">
    <wsdl:part element="intf:jobInitialize" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="validateInteractiveResponse">
    <wsdl:part element="intf:validateInteractiveResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="jobInitializeResponse">
    <wsdl:part element="intf:jobInitializeResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="PostML">
    <wsdl:operation name="jobFinalize">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Finalizes the list after you are done calling web service operations.</wsdl:documentation>
      <wsdl:input message="intf:jobFinalizeRequest" name="jobFinalizeRequest"/>
      <wsdl:output message="intf:jobFinalizeResponse" name="jobFinalizeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="validate">
<wsdl:documentation xmlns="http://www.w3.org/1999/xhtml" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
        &lt;p&gt;
          Validate up to 10 addresses in-place.
        &lt;/p&gt;
        &lt;p&gt;
          If you want to receive hint data back, set mode to &quot;Interactive&quot; in the WsPostalinputRecord. customerpk, deliveryaddressline1Input, and lastline are all required for this operation.
        &lt;/p&gt;
      </wsdl:documentation>
      <wsdl:input message="intf:validateRequest" name="validateRequest"/>
      <wsdl:output message="intf:validateResponse" name="validateResponse"/>
    </wsdl:operation>
    <wsdl:operation name="jobInitialize">
<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates a new list.</wsdl:documentation>
      <wsdl:input message="intf:jobInitializeRequest" name="jobInitializeRequest"/>
      <wsdl:output message="intf:jobInitializeResponse" name="jobInitializeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="validateInteractive">
<wsdl:documentation xmlns="http://www.w3.org/1999/xhtml" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
        &lt;p&gt;
          Validate a single address interactively.
        &lt;/p&gt;
        &lt;p&gt;
          If you want to receive hint data back, set mode to &quot;Interactive&quot; in the WsPostalinputRecord. customerpk, deliveryaddressline1Input, and lastline are all required for this operation.
        &lt;/p&gt;
        &lt;p&gt;
          A WsPostaloutputRecord will be returned with answers and your original inputs.
        &lt;/p&gt;      
      </wsdl:documentation>
      <wsdl:input message="intf:validateInteractiveRequest" name="validateInteractiveRequest"/>
      <wsdl:output message="intf:validateInteractiveResponse" name="validateInteractiveResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PostMLSoapBinding" type="intf:PostML">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="jobFinalize">
      <wsdlsoap:operation soapAction="jobFinalize"/>
      <wsdl:input name="jobFinalizeRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="jobFinalizeResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <wsdlsoap:operation soapAction="validate"/>
      <wsdl:input name="validateRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="jobInitialize">
      <wsdlsoap:operation soapAction="jobInitialize"/>
      <wsdl:input name="jobInitializeRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="jobInitializeResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validateInteractive">
      <wsdlsoap:operation soapAction="validateInteractive"/>
      <wsdl:input name="validateInteractiveRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateInteractiveResponse">
        <wsdlsoap:body parts="parameters" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PostMLService">
<wsdl:documentation xmlns="http://www.w3.org/1999/xhtml" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
      &lt;p&gt;
    	PostML service is used for interactive real-time address validation. You can determine if an address is &apos;good&apos; or &apos;bad&apos; by examining the dpvconfirmind and dpvfootnote fields. See &quot;dpvconfirmind&quot; in
        WsPostaloutputRecord complex type definition for more information.
      &lt;/p&gt;
      &lt;p&gt;
        When using a WsPostalinputRecord as a parameter in validate or validateInteractive: deliveryaddressline1input, lastlineinput, and customerpk are all required fields.
      &lt;/p&gt;
      &lt;p&gt;
        If you are interested in retreiving hint data to aid your user in correcting a &apos;bad&apos;/incomplete address, you will need to set &quot;mode&quot; to &quot;Interactive&quot; in the WsPostalinputRecords you submit. The WsPostaloutputRecords that are returned may have one
        of the hint data fields populated, the information in these fields is tabular. Consider each record a row in a table to show your user.
      &lt;/p&gt;
      &lt;p&gt;
        Hint data fields of WsPostaloutputRecord are zip4Records, cityStateRecords, stateRecords, stateCityRecords, and stateCityStreetRecords.
      &lt;/p&gt;
      &lt;p&gt;
        Sample SOAP messages are located at the end of this document.
      &lt;/p&gt;
      &lt;p&gt;
        -- To use this service you will need to send SOAP messages over HTTPS with a plain text UsernameToken.
      &lt;/p&gt;
      &lt;p&gt;
        Code samples may be found at &lt;a href=&quot;http://duoshare.com/developers/developers.html&quot;&gt;http://duoshare.com/developers/developers.html&lt;/a&gt;
      &lt;/p&gt;
    </wsdl:documentation>
    <wsdl:port binding="intf:PostMLSoapBinding" name="PostML">
      <wsdlsoap:address location="https://duoshare.com:443/dsWS/services/PostML"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>