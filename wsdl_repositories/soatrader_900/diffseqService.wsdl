<wsdl:definitions xmlns:soat="http://ws.soatrader.com/"
                  xmlns:tns="http://www.dkfz-heidelberg.de/menu/tomcat/as/alignment_differences.diffseq"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:apachesoap="http://xml.apache.org/xml-soap"
                  xmlns:impl="http://www.dkfz-heidelberg.de/menu/tomcat/as/alignment_differences.diffseq"
                  xmlns:intf="http://www.dkfz-heidelberg.de/menu/tomcat/as/alignment_differences.diffseq"
                  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/alignment_differences.diffseq">
   <wsdl:message name="SOATraderLicense">
      <wsdl:part element="soat:SOATraderLicense" name="SOATraderLicense"/>
   </wsdl:message>
   <wsdl:message name="SOATraderUsageStatistics">
      <wsdl:part element="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
   </wsdl:message>
  <wsdl:types>
      <schema xmlns="http://www.w3.org/2001/XMLSchema"
              targetNamespace="http://ws.soatrader.com/"
              elementFormDefault="qualified">
         <element type="string" name="SOATraderLicense"/>
         <element type="soat:SOATraderUsageStatistics" name="SOATraderUsageStatistics"/>
         <complexType name="SOATraderUsageStatistics">
            <sequence>
               <element type="decimal" name="HitsMade"/>
               <element type="decimal" name="HitsLeft"/>
            </sequence>
         </complexType>
      </schema>
      <schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
              targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/alignment_differences.diffseq">
         <xsd:annotation>
            <xsd:documentation>Find differences between nearly identical
                  sequences</xsd:documentation>
         </xsd:annotation>
         <element name="runAndWaitFor">
            <complexType>
               <sequence>
                  <element name="diffseq" type="impl:Tdiffseq"/>
               </sequence>
            </complexType>
         </element>
         <simpleType name="TdiffseqAsequenceSformat1">
            <restriction base="xsd:string">
               <enumeration value="gcg"/>
               <enumeration value="gcg8"/>
               <enumeration value="embl"/>
               <enumeration value="swiss"/>
               <enumeration value="fasta"/>
               <enumeration value="ncbi"/>
               <enumeration value="genbank"/>
               <enumeration value="nbrf"/>
               <enumeration value="pir"/>
               <enumeration value="codata"/>
               <enumeration value="strider"/>
               <enumeration value="clustal"/>
               <enumeration value="phylip"/>
               <enumeration value="acedb"/>
               <enumeration value="msf"/>
               <enumeration value="jackknifer"/>
               <enumeration value="jackknifernon"/>
               <enumeration value="nexus"/>
               <enumeration value="nexusnon"/>
               <enumeration value="treecon"/>
               <enumeration value="mega"/>
               <enumeration value="meganon"/>
               <enumeration value="ig"/>
               <enumeration value="staden"/>
               <enumeration value="text"/>
               <enumeration value="raw"/>
            </restriction>
         </simpleType>
         <complexType name="TdiffseqAsequence">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="asequence_direct_data" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="asequence_usa" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sformat1"
                        type="impl:TdiffseqAsequenceSformat1"/>
               <element maxOccurs="1" minOccurs="0" name="sbegin1" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="send1" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="sprotein1" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="snucleotide1" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="sreverse1" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="slower1" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="supper1" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <simpleType name="TdiffseqBsequenceSformat2">
            <restriction base="xsd:string">
               <enumeration value="gcg"/>
               <enumeration value="gcg8"/>
               <enumeration value="embl"/>
               <enumeration value="swiss"/>
               <enumeration value="fasta"/>
               <enumeration value="ncbi"/>
               <enumeration value="genbank"/>
               <enumeration value="nbrf"/>
               <enumeration value="pir"/>
               <enumeration value="codata"/>
               <enumeration value="strider"/>
               <enumeration value="clustal"/>
               <enumeration value="phylip"/>
               <enumeration value="acedb"/>
               <enumeration value="msf"/>
               <enumeration value="jackknifer"/>
               <enumeration value="jackknifernon"/>
               <enumeration value="nexus"/>
               <enumeration value="nexusnon"/>
               <enumeration value="treecon"/>
               <enumeration value="mega"/>
               <enumeration value="meganon"/>
               <enumeration value="ig"/>
               <enumeration value="staden"/>
               <enumeration value="text"/>
               <enumeration value="raw"/>
            </restriction>
         </simpleType>
         <complexType name="TdiffseqBsequence">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="bsequence_direct_data" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="bsequence_usa" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="sformat2"
                        type="impl:TdiffseqBsequenceSformat2"/>
               <element maxOccurs="1" minOccurs="0" name="sbegin2" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="send2" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="sprotein2" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="snucleotide2" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="sreverse2" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="slower2" type="xsd:boolean"/>
               <element maxOccurs="1" minOccurs="0" name="supper2" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <simpleType name="TdiffseqOfformat1">
            <restriction base="xsd:string">
               <enumeration value="embl"/>
               <enumeration value="genbank"/>
               <enumeration value="ddbj"/>
               <enumeration value="gff"/>
               <enumeration value="acedb"/>
               <enumeration value="swissprot"/>
            </restriction>
         </simpleType>
         <simpleType name="TdiffseqOfformat2">
            <restriction base="xsd:string">
               <enumeration value="embl"/>
               <enumeration value="genbank"/>
               <enumeration value="ddbj"/>
               <enumeration value="gff"/>
               <enumeration value="acedb"/>
               <enumeration value="swissprot"/>
            </restriction>
         </simpleType>
         <complexType name="Tdiffseq">
            <sequence>
               <element name="asequence" type="impl:TdiffseqAsequence">
                  <xsd:annotation>
                     <xsd:documentation>qualifiers for parameter: asequence</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element name="bsequence" type="impl:TdiffseqBsequence">
                  <xsd:annotation>
                     <xsd:documentation>qualifiers for parameter: bsequence</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element name="wordsize" type="xsd:long">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Word size</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>The similar regions between the two sequences are found by
           creating a hash table of 'wordsize'd subsequences. 10 is a
           reasonable default. Making this value larger (20?) may speed up
           the program slightly, but will mean that any two differences
           within 'wordsize' of each other will be grouped as a single region
           of difference. This value may be made smaller (4?) to improve the
           resolution of nearby differences, but the program will go much
           slower.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="globaldifferences" type="xsd:boolean">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Force reporting of differences at the start and end</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Normally this program will find regions of identity 
           that are the length of the specified word-size or greater and
           will then report the regions of difference between these
           matching regions. This works well and is what most people
           want if they are working with long overlapping nucleic
           acid sequences. You are usually not interested in the 
           non-overlapping ends of these sequences. If you have protein
           sequences or short RNA sequences however, you will be interested
           in differences at the very ends . It this option is set to be true
           then the differences at the ends will also be reported.</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="offormat1" type="impl:TdiffseqOfformat1">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Format for: File for output of first sequence's features</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Format for: File for output of first sequence's features</xsd:documentation>
                  </xsd:annotation>
               </element>
               <element maxOccurs="1" minOccurs="0" name="offormat2" type="impl:TdiffseqOfformat2">
                  <xsd:annotation>
                     <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                        <emboss:prompt>Format for: File for output of second sequence's features</emboss:prompt>
                     </xsd:appinfo>
                     <xsd:documentation>Format for: File for output of second sequence's features</xsd:documentation>
                  </xsd:annotation>
               </element>
            </sequence>
         </complexType>
         <element name="runAndWaitForResponse">
            <complexType>
               <sequence>
                  <element name="diffseqResult" type="impl:TdiffseqResult"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="TdiffseqResult">
            <sequence>
               <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
               <element maxOccurs="1" minOccurs="0" name="outfile" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="aoutfeat" type="xsd:string"/>
               <element maxOccurs="1" minOccurs="0" name="boutfeat" type="xsd:string"/>
            </sequence>
         </complexType>
         <complexType name="TSoaplabException">
            <sequence/>
         </complexType>
         <element name="fault" type="impl:TSoaplabException"/>
         <element name="createAndRun">
            <complexType>
               <sequence>
                  <element name="diffseq" type="impl:Tdiffseq"/>
               </sequence>
            </complexType>
         </element>
         <element name="createAndRunResponse">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitFor">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="waitForResponse">
            <complexType/>
         </element>
         <element name="getStatus">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getStatusResponse">
            <complexType>
               <sequence>
                  <element name="status" type="impl:Tstatus"/>
               </sequence>
            </complexType>
         </element>
         <complexType name="Tstatus">
            <sequence>
               <element name="inProgress" type="xsd:boolean"/>
               <element name="detailed" type="xsd:string"/>
               <element name="erroneous" type="xsd:boolean"/>
               <element name="description" type="xsd:string"/>
               <element name="completed" type="xsd:boolean"/>
               <element name="asString" type="xsd:string"/>
               <element name="successful" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getResults">
            <complexType>
               <sequence>
                  <element name="jobid" type="xsd:string"/>
               </sequence>
            </complexType>
         </element>
         <element name="getResultsResponse">
            <complexType>
               <sequence>
                  <element name="diffseqResult" type="impl:TdiffseqResult"/>
               </sequence>
            </complexType>
         </element>
      </schema>
  </wsdl:types>
  <wsdl:message name="getResultsResponse">
      <wsdl:part element="impl:getResultsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SoaplabException">
      <wsdl:part element="impl:fault" name="fault"/>
  </wsdl:message>
  <wsdl:message name="waitForRequest">
      <wsdl:part element="impl:waitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunResponse">
      <wsdl:part element="impl:createAndRunResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getResultsRequest">
      <wsdl:part element="impl:getResults" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
      <wsdl:part element="impl:getStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForResponse">
      <wsdl:part element="impl:runAndWaitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waitForResponse">
      <wsdl:part element="impl:waitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForRequest">
      <wsdl:part element="impl:runAndWaitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
      <wsdl:part element="impl:getStatusResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunRequest">
      <wsdl:part element="impl:createAndRun" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="alignment_differences__diffseq">
      <wsdl:operation name="runAndWaitFor">
         <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
         <wsdl:input message="impl:runAndWaitForRequest" name="runAndWaitForRequest"/>
         <wsdl:output message="impl:runAndWaitForResponse" name="runAndWaitForResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="createAndRun">
         <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
         <wsdl:input message="impl:createAndRunRequest" name="createAndRunRequest"/>
         <wsdl:output message="impl:createAndRunResponse" name="createAndRunResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="waitFor">
         <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
         <wsdl:input message="impl:waitForRequest" name="waitForRequest"/>
         <wsdl:output message="impl:waitForResponse" name="waitForResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="getStatus">
         <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
         <wsdl:input message="impl:getStatusRequest" name="getStatusRequest"/>
         <wsdl:output message="impl:getStatusResponse" name="getStatusResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
      <wsdl:operation name="getResults">
         <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
         <wsdl:input message="impl:getResultsRequest" name="getResultsRequest"/>
         <wsdl:output message="impl:getResultsResponse" name="getResultsResponse"/>
         <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
      </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="alignment_differences.diffseq.derivedSoapBinding"
                 type="impl:alignment_differences__diffseq">
      <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <wsdl:operation name="runAndWaitFor">
         <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="runAndWaitForRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="runAndWaitForResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="createAndRun">
         <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="createAndRunRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="createAndRunResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="waitFor">
         <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="waitForRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="waitForResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getStatus">
         <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="getStatusRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="getStatusResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getResults">
         <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="getResultsRequest">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" part="SOATraderLicense"
                         message="tns:SOATraderLicense"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="getResultsResponse">
            <soap:header xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                         part="SOATraderUsageStatistics"
                         message="tns:SOATraderUsageStatistics"
                         use="literal"/>
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="SoaplabException">
            <wsdlsoap:fault name="SoaplabException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="diffseqService">
      <wsdl:port binding="impl:alignment_differences.diffseq.derivedSoapBinding"
                 name="alignment_differences.diffseq.derived">
         <wsdlsoap:address location="http://ws.soatrader.com/dkfz-heidelberg.de/0.1/diffseqService"/>
      </wsdl:port>
  </wsdl:service>
</wsdl:definitions>